{
	"groups": {
		"basics": {
			"label": "基礎命令",
			"description": [
				"ランタイムの形式やプラットフォームに関わらずにサポートされる命令カテゴリです。"
			]
		},
		"standard": {
			"label": "標準命令",
			"description": [
				"標準ランタイムによってサポートされる命令カテゴリです。"
			]
		}
	},
	"tags": {
		"strings": {
			"label": "文字列命令",
			"description": [
				"文字列に関する命令です。"
			]
		}
	},
	"documents": {
		"quickReference": {
			"summary": "クイックリファレンス",
			"group": ["basics"],
			"tag": [],
			"file": "doc/quickReference.md"
		},
		"developEnvironment": {
			"summary": "開発環境",
			"group": ["basics"],
			"tag": [],
			"file": "doc/developEnvironment.md"
		}
	},
	"references": {
		"#error": {
			"type": "preprocessor",
			"summary": "コンパイルエラーにする",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "errorMessage",
					"description": "エラーメッセージ"
				}
			],
			"description": [
				"errorMessageで指定したメッセージを伴ったコンパイルエラー（プリプロセスエラー）を発生させます。",
				"",
				"このプリプロセッサ単体では必ずコンパイルエラーになってしまうため、$ref(#if)などとの併用で特定の条件下でのコンパイルエラー検出を意図したプリプロセッサになります。"
			],
			"relationGroup": [
				"preprocessorCommon"
			]
		},

		"#define": {
			"type": "preprocessor",
			"summary": "新規マクロ定義",
			"group": ["basics"],
			"tag": [],
			"preParameters": [
				{
					"name": "[ctype]",
					"description": "関数スタイルのマクロとして定義"
				},
				{
					"name": "[global]",
					"description": "グローバル名前空間のマクロとして定義"
				}
			],
			"parameters": [
				{
					"name": "macroName",
					"description": "マクロ名"
				}
			],
			"postParameters": [
				{
					"name": "(macroParams [= defaultValue], ...)",
					"description": "マクロ引数"
				},
				{
					"name": "content",
					"description": "マクロ置き換え後の内容"
				}
			],
			"description": [
				"新規マクロを定義します。",
				"マクロはプリプロセッサでの内容置き換えのルールで、マクロで定義した識別子はプリプロセス時に定義した内容に置き換えられます。",
				"",
				"例えば、$",
				"$",
				"```$",
				"#define MY_NUMBER 10$",
				"mes \"MY_NUMBER\" + MY_NUMBER$",
				"```$",
				"$",
				"というコードはプリプロセスにより$",
				"$",
				"```$",
				"$",
				"mes \"MY_NUMBER\" + 10$",
				"```$",
				"$",
				"というコードに置き換わり、この状態でコンパイルが行われます。",
				"",
				"マクロにパラメータをつけることで、置き換え後のマクロの一部を変更することができるようになります。",
				"例えば$",
				"$",
				"```$",
				"#define ctype MY_NUMBER(%1 = 1) (%1 * 10)$",
				"mes \"MY_NUMBER\" + MY_NUMBER(2)$",
				"```$",
				"$",
				"というコードはプリプロセスにより$",
				"$",
				"```$",
				"$",
				"mes \"MY_NUMBER\" + (2 * 10)$",
				"```$",
				"$",
				"というコードに置き換わります。",
				"ctype指定によって関数スタイルのマクロで定義していることに注意してください。",
				"",
				"マクロのパラメータ名は`%`から始まり、その後は数値である必要があります。",
				"また、マクロのパラメータ名は*定義した順番に連番である必要がある*ことにも注意してください。",
				"",
				"プリプロセッサではありますがマクロも$ref(#module)による名前空間に従属します。",
				"モジュール空間内で定義されたマクロは基本的には同じモジュール内でのみ参照可能ですが、他の名前空間でも使用したい場合は`global`を指定してください。",
				"",
				"※HSP3における`%c`などの特殊展開マクロはサポートされていません。"
			],
			"relationGroup": [
				"preprocessorCommon"
			]
		},
		"#undef": {
			"type": "preprocessor",
			"summary": "マクロ定義の削除",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "macroName",
					"description": "マクロ名"
				}
			],
			"description": [
				"マクロ定義を削除します。",
				"指定したマクロ定義が存在していなかった場合、エラーにはならずそのままプリプロセスは継続されます。"
			],
			"relationGroup": [
				"preprocessorCommon"
			]
		},

		"#if": {
			"type": "preprocessor",
			"summary": "コンパイル制御の開始",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "expression",
					"description": "コンパイル制御する条件値"
				}
			],
			"description": [
				"スクリプトファイルの一部をコンパイル制御（コンパイルする／しないの変更）します。",
				"",
				"expressionを数値として評価した値が`0`の時、直後の行以降のスクリプトをコンパイル対象から除外します。",
				"それ以外の値の場合、直後の行以降のスクリプトをコンパイル対象に含めます。",
				"",
				"コンパイル制御区間は#if から $ref(#else)、$ref(#elif)、$ref(#endif)までの区間となります。",
				"コンパイル制御区間は入れ子にすることができ、コンパイル制御結果は上位の制御区間からも影響を受けます。",
				"",
				"プリプロセッサのため、expressionに指定できる値はコンパイル時評価可能な値である必要があります。",
				"expressionにマクロが存在する場合はマクロ展開された後の内容が評価に使われます。",
				"",
				"expressionでの展開時に限り、マクロが定義されているか否かを`0`か`1`に展開される特殊展開マクロ`defined`を使うことができます。",
				"例えば$",
				"$",
				"```$",
				"#define IS_DEBUG$",
				"#if defined(IS_DEBUG)$",
				"mes \"IS_DEBUG ON!\"$",
				"#else$",
				"mes \"IS_DEBUG OFF.\"$",
				"#endif$",
				"```$",
				"$",
				"というコードはプリプロセスにより$",
				"$",
				"```$",
				"mes \"IS_DEBUG ON!\"$",
				"```$",
				"$",
				"というコードに置き換わります。",
				"",
				"コンパイル制御区間の区切りには#if以外に$ref(#elif)や$ref(#else)が、区間の終了には$ref(#endif)が使われます。",
				"これらの制御区間の処理の例を次に示します。$",
				"$",
				"```$",
				"#if expression$",
				"    // ここは expression が 0 以外の値ならコンパイル対象になる$",
				"#elif expression2$",
				"    // ここは expression が 0 かつ、 expression2 が 0 以外の値ならコンパイル対象になる$",
				"#else$",
				"    // ここは expression が 0 かつ、 expression2 が 0 ならコンパイル対象になる$",
				"#endif$",
				"```$"
			],
			"relationGroup": [
				"preprocessorCommon"
			]
		},
		"#ifdef": {
			"type": "preprocessor",
			"summary": "コンパイル制御の開始",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "macroName",
					"description": "コンパイル制御するための条件マクロ"
				}
			],
			"description": [
				"スクリプトファイルの一部をコンパイル制御（コンパイルする／しないの変更）します。",
				"",
				"macorNameで指定したマクロ名が存在すれば、直後の行以降のスクリプトをコンパイル対象に含めます。",
				"マクロが存在しない場合、直後の行以降のスクリプトをコンパイル対象から除外します。",
				"",
				"それ以外の詳細な情報については$ref(#if)を参照してください。"
			],
			"relationGroup": [
				"preprocessorCommon"
			]
		},
		"#ifndef": {
			"type": "preprocessor",
			"summary": "コンパイル制御の開始",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "macroName",
					"description": "コンパイル制御するための条件マクロ"
				}
			],
			"description": [
				"スクリプトファイルの一部をコンパイル制御（コンパイルする／しないの変更）します。",
				"",
				"macorNameで指定したマクロ名が存在しなければ、直後の行以降のスクリプトをコンパイル対象に含めます。",
				"マクロが存在する場合、直後の行以降のスクリプトをコンパイル対象から除外します。",
				"",
				"それ以外の詳細な情報については$ref(#if)を参照してください。"
			],
			"relationGroup": [
				"preprocessorCommon"
			]
		},
		"#elif": {
			"type": "preprocessor",
			"summary": "異なるコンパイル制御区間の開始",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "expression",
					"description": "コンパイル制御するための条件値"
				}
			],
			"description": [
				"コンパイル制御区間を区切り、異なる条件のコンパイル制御を開始します。",
				"",
				"$ref(#if)等で始まったコンパイル制御区間を区切り、直前までのコンパイル制御区間で有効な制御区間が存在しなかった場合かつexpressionの値`0`以外の場合に、直後の行以降のスクリプトをコンパイル対象に含めます。",
				"",
				"より詳細な情報は$ref(#if)を参照してください。"
			],
			"relationGroup": [
				"preprocessorCommon"
			]
		},
		"#else": {
			"type": "preprocessor",
			"summary": "異なるコンパイル制御区間の開始",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"コンパイル制御区間を区切り、直前までとは異なるコンパイル制御を開始します。",
				"",
				"$ref(#if)等で始まったコンパイル制御区間を区切り、直前までのコンパイル制御区間で有効な制御区間が存在しなかった場合に、直後の行以降のスクリプトをコンパイル対象に含めます。",
				"",
				"より詳細な情報は$ref(#if)を参照してください。"
			],
			"relationGroup": [
				"preprocessorCommon"
			]
		},
		"#endif": {
			"type": "preprocessor",
			"summary": "コンパイル制御区間の終了",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"コンパイル制御区間を終了します。",
				"",
				"より詳細な情報は$ref(#if)を参照してください。"
			],
			"relationGroup": [
				"preprocessorCommon"
			]
		},

		"#enum": {
			"type": "preprocessor",
			"summary": "列挙定数マクロを定義",
			"group": ["basics"],
			"tag": [],
			"preParameters": [
				{
					"name": "[global]",
					"description": "グローバル名前空間のマクロとして定義"
				}
			],
			"parameters": [
				{
					"name": "macroName",
					"description": "定義するマクロ名"
				}
			],
			"postParameters": [
				{
					"name": "[= value]",
					"description": "マクロの定数値"
				}
			],
			"description": [
				"整数値のマクロを定義します。",
				"",
				"`#enum A = 0`のように記述すると`0`に置き換わるマクロ`A`が定義できますが、`=`を伴わずに#enumを行うことで、`直前の#enumで定義した値+1`を置き換え内容にしたマクロが定義されきます。",
				"そのため、連番の整数値を持ったマクロを簡単に定義することができます。$",
				"$",
				"```$",
				"#enum A = 0$",
				"#enum B// 0 + 1 で 1 に置換されるマクロになる$",
				"#enum C// 1 + 1 で 2 に置換されるマクロになる$",
				"mes strf(\"A=%d, B=%d, C=%d\", A, B, C)$",
				"// 結果「A=0, B=1, C=2」$",
				"```$"
			],
			"relationGroup": [
				"preprocessorCommon"
			]
		},
		"#const": {
			"type": "preprocessor",
			"summary": "値マクロを定義",
			"group": ["basics"],
			"tag": [],
			"preParameters": [
				{
					"name": "[global]",
					"description": "グローバル名前空間のマクロとして定義"
				},
				{
					"name": "[double]",
					"description": "実数値として計算"
				}
			],
			"parameters": [
				{
					"name": "macroName",
					"description": "定義するマクロ名"
				}
			],
			"postParameters": [
				{
					"name": "value",
					"description": "マクロの値"
				}
			],
			"description": [
				"整数値または実数値のマクロを定義します。",
				"",
				"$ref(#define)によるマクロ定義と挙動はほぼ同じですが、$",
				"$",
				"- 置き換え後の内容valueは値でない場合にコンパイルエラー$",
				"- 置き換え後の内容valueは定義時にコンパイル時計算される$",
				"$",
				"点が異なります。",
				"",
				"一般に、複雑な計算を伴う値は$ref(define)よりも$ref(const)の方が実行時処理に無駄が少なくなります。"
			],
			"relationGroup": [
				"preprocessorCommon"
			]
		},

		"#include": {
			"type": "preprocessor",
			"summary": "別スクリプトファイルを結合",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "\"filePath\"",
					"description": "結合するファイルパス"
				}
			],
			"description": [
				"別ファイルの内容のスクリプトを、このプリプロセッサの行に挿入します。",
				"これによりスクリプトを複数ファイルに分けて管理することができます。",
				"",
				"#includeでのファイルは$",
				"$",
				"- 現在のスクリプトからの相対パス$",
				"- システムのincludeパスからの相対パス$",
				"- filePathそのもの（絶対パス）$",
				"$",
				"の順に検索・解決されます。"
			],
			"relationGroup": [
				"preprocessorCommon"
			]
		},

		"#module": {
			"type": "preprocessor",
			"summary": "モジュール型の定義開始",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "name",
					"description": "定義するモジュール名"
				}
			],
			"postParameters": [
				{
					"name": "[local instanceVariables, ...]",
					"description": "インスタンス変数"
				}
			],
			"description": [
				"新しくモジュール型の定義を開始します。",
				"モジュールの定義は$ref(#global)によって終了する必要があります。",
				"",
				"モジュールの詳細については前提となる知識が多いため、詳細については$doc(quickReference)を参照してください。"
			],
			"relationGroup": [
				"moduleCommon"
			]
		},
		"#global": {
			"type": "preprocessor",
			"summary": "モジュール型の定義終了",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"モジュール型の定義を終了します。",
				"詳細は$ref(#module)を参照してください。"
			],
			"relationGroup": [
				"moduleCommon"
			]
		},
		"#modinit": {
			"type": "preprocessor",
			"summary": "モジュール型のコンストラクタ定義",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"postParameters": [
				{
					"name": "type paramName, ...",
					"description": "定義するコンストラクタの引数"
				}
			],
			"description": [
				"モジュール型のコンストラクタを定義します。",
				"詳細は$ref(#module)を参照してください。"
			],
			"relationGroup": [
				"moduleCommon"
			]
		},
		"#modterm": {
			"type": "preprocessor",
			"summary": "モジュール型のデストラクタ定義",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"モジュール型のデストラクタを定義します。",
				"詳細は$ref(#module)を参照してください。"
			],
			"relationGroup": [
				"moduleCommon"
			]
		},
		"#modfunc": {
			"type": "preprocessor",
			"summary": "モジュール型のメンバー関数定義",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "funcName",
					"description": "定義する関数名"
				}
			],
			"postParameters": [
				{
					"name": "type paramName, ...",
					"description": "定義する関数の引数"
				}
			],
			"description": [
				"モジュール型のメンバー関数を定義します。",
				"詳細は$ref(#module)を参照してください。",
				"また、関数定義の詳細については$ref(#deffunc)を参照してください。"
			],
			"relationGroup": [
				"moduleCommon"
			]
		},
		"#modcfunc": {
			"type": "preprocessor",
			"summary": "モジュール型のメンバー関数定義",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "funcName",
					"description": "定義する関数名"
				}
			],
			"postParameters": [
				{
					"name": "type paramName, ...",
					"description": "定義する関数の引数"
				}
			],
			"description": [
				"モジュール型のメンバー関数を定義します。",
				"詳細は$ref(#module)を参照してください。",
				"また、関数定義の詳細については$ref(#deffunc)を参照してください。",
				"HSP3と違い#modcfuncと#ref(#modfunc)の違いはありません。"
			],
			"relationGroup": [
				"moduleCommon"
			]
		},

		"#deffunc": {
			"type": "preprocessor",
			"summary": "関数の定義",
			"group": ["basics"],
			"tag": [],
			"preParameters": [
				{
					"name": "[local/global]",
					"description": "関数が参照できるスコープ"
				}
			],
			"parameters": [
				{
					"name": "funcName",
					"description": "定義する関数名"
				}
			],
			"postParameters": [
				{
					"name": "type paramName, ...",
					"description": "定義する関数の引数"
				}
			],
			"description": [
				"新しく関数を定義します。",
				"",
				"関数名の後、型名typeとパラメータ名paramNameをカンマ区切りで記述します。",
				"typeとして指定できる型名は次の表の通りです。$",
				"$",
				"|type|内容|$",
				"|:--|:--|$",
				"|int|整数値|$",
				"|double|実数値|$",
				"|str|文字列|$",
				"|var|変数（単一要素）|$",
				"|array|変数（配列全体）|$",
				"|label|ラベル型|$",
				"|local|ローカル変数|",
				"$",
				"ローカル変数の定義もパラメータとして定義する点に注意してください。",
				"",
				"関数定義の明示的な終了は存在しません。",
				"そのため、関数定義以降にパラメータ名と同名のグローバル変数を参照したい場合は、`paramName@`のように`@`をつけることでモジュール名も付加した記述が必要です。",
				"",
				"HSP3と違い#deffuncと$ref(#defcfunc)の違いはありません。",
				"いずれの定義でもコマンド呼び出し、関数呼び出しが可能です。",
				"関数として呼び出された場合は値をそのまま返し、コマンドとして呼び出された場合は戻り値の型に応じてシステム変数へ値が代入されます。",
				"",
				"その他モジュールと関連した挙動については前提とした知識が多くなるため、$doc(quickReference)を参照してください。"
			],
			"relationGroup": [
				"deffuncCommon"
			]
		},
		"#defcfunc": {
			"type": "preprocessor",
			"summary": "関数の定義",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "funcName",
					"description": "定義する関数名"
				}
			],
			"description": [
				"新しく関数を定義します。",
				"",
				"このプリプロセッサはHSP3との互換性のために用意されたものであり、内容は$ref(#deffunc)と変わりません。",
				"そのため詳細は$ref(#deffunc)を参照してください。"
			],
			"relationGroup": [
				"deffuncCommon"
			]
		},

		"#uselib": {
			"type": "preprocessor",
			"summary": "動的ライブラリのインポート",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "\"libFilePath\"",
					"description": "インポートするライブラリパス"
				}
			],
			"description": [
				"動的ライブラリのインポートを行う宣言です。",
				"",
				"このプリプロセッサ以降、$ref(#func)や$ref(#cfunc)で定義したライブラリ関数は指定した動的ライブラリからインポートされたものとして処理されます。",
				"",
				"動的ライブラリの実際のインポートは実行時に行われるため、インポートに伴うエラーは起動時に発生することに注意してください。",
				"また、ライブラリ関数は関数呼び出し時にエラーチェックが行われるため、起動時にライブラリ関数読み込みエラーは検出されないことに注意してください。",
				"",
				"$ref(#uselib)及び$ref(#func)は実行時のプラットフォーム、アーキテクチャ（ABI）、エンディアン等に大きく左右される処理なので、使用には十分注意してください。",
				"また、HTML(emscripten)など動的ライブラリが使用できないプラットフォームとの動作互換性がなくなることにも留意してください。",
				"",
				"各プラットフォームにおける呼び出し規約などについては$doc(quickReference)を参照してください。"
			],
			"relationGroup": [
				"dynlibCommon"
			]
		},
		"#func": {
			"type": "preprocessor",
			"summary": "動的ライブラリ関数の宣言",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "funcName",
					"description": "宣言する関数名"
				}
			],
			"postParameters": [
				{
					"name": "\"libFuncName\"",
					"description": "ライブラリ内での関数名（完全修飾名）"
				},
				{
					"name": "type paramName, ...",
					"description": "関数の引数"
				}
			],
			"description": [
				"動的ライブラリ内の関数を宣言します。",
				"対象となる動的ライブラリは$ref(#uselib)により宣言します。",
				"",
				"パラメータ記述は$ref(#deffunc)等とほぼ同じですが、#funcでは引数の型は次のように拡張・解釈されます。$",
				"$",
				"|type|内容|備考|$",
				"|:--|:--|:--|$",
				"|int|ポインタと一致するビット幅の整数値||$",
				"|double|8ビット幅の実数値||$",
				"|str|cp932文字列ポインタ|cp932への変換は自動で行われます|$",
				"|wstr|UTF16文字列ポインタ|UTF16への変換は自動で行われます|$",
				"|var|変数要素のデータポインタ||$",
				"|array|変数のデータポインタ||$",
				"|sptr|文字列の場合文字列ポインタ<br>そうでない場合ポインタと一致するビット幅の整数値||$",
				"|float|4ビット幅の実数値||$",
				"|nullptr|ヌルポインタ||$",
				"|int64|64ビット幅の整数値|独自拡張|$",
				"|u8str|UTF8文字列ポインタ|独自拡張|$",
				"|u8sptr|文字列の場合UTF8文字列ポインタ<br>そうでない場合ポインタと一致するビット幅の整数値|独自拡張|$"
			],
			"relationGroup": [
				"dynlibCommon"
			]
		},
		"#cfunc": {
			"type": "preprocessor",
			"summary": "動的ライブラリ関数の宣言",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "funcName",
					"description": "宣言する関数名"
				}
			],
			"postParameters": [
				{
					"name": "libFuncName",
					"description": "ライブラリ内での関数名（完全修飾名）"
				},
				{
					"name": "type paramName, ...",
					"description": "関数の引数"
				}
			],
			"description": [
				"動的ライブラリ内の関数を宣言します。",
				"内容は$ref(#func)と違いがないため、そちらの内容を参照してください。"
			],
			"relationGroup": [
				"dynlibCommon"
			]
		},

		"#bootopt": {
			"type": "preprocessor",
			"summary": "実行時オプションの設定",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"実行時のオプションを設定します。",
				"現在はサポートされていません（エラーとなります。）"
			],
			"relationGroup": [
				"preprocessorCommon"
			]
		},
		"#cmpopt": {
			"type": "preprocessor",
			"summary": "コンパイルオプションの設定",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"コンパイルオプションを設定します。",
				"現在はサポートされていません（エラーとなります。）"
			],
			"relationGroup": [
				"preprocessorCommon"
			]
		},
		"#packopt": {
			"type": "preprocessor",
			"summary": "実行ファイルオプションの設定",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"スクリプトを実行ファイル化した際のオプションを設定します。",
				"#packoptの後、キーワードを書きその後はキーワード毎のパラメータを指定します。$",
				"$",
				"|キーワード|パラメータ|内容|デフォルト値|備考|$",
				"|:--|:--|:--|:--|:--|$",
				"|name|文字列|実行ファイル名|`\"nhsptmp\"`||$",
				"|type|整数|実行ファイルタイプ|`0`|HSP3との互換性パラメータで、無視されます。|$",
				"|xsize|整数|初期ウィンドウサイズX|`640`||$",
				"|ysize|整数|初期ウィンドウサイズY|`480`||$",
				"|hide|整数|初期ウィンドウの可視|`1`||$",
				"|orgpath|整数|初期ディレクトリ維持設定|`0`|HSP3との互換性パラメータで、無視されます。|$",
				"|icon|文字列|実行ファイルのアイコン||現在未サポート（将来的にサポート予定です）|$",
				"|version|文字列|実行ファイルのバージョンリソースファイル||HSP3との互換性パラメータで、無視されます。|$",
				"|manifest|文字列|実行ファイルのマニフェストファイル||HSP3との互換性パラメータで、無視されます。|$",
				"|lang|整数|実行ファイルの言語ID||HSP3との互換性パラメータで、無視されます。|$",
				"|upx|整数|実行ファイルのUPX圧縮フラグ|`0`|HSP3との互換性パラメータで、無視されます。|$",
				"$",
				""
			],
			"relationGroup": [
				"preprocessorCommon"
			]
		},
		"#pack": {
			"type": "preprocessor",
			"summary": "実行ファイルに含めるファイルの追加",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "\"filePath\"",
					"description": "追加するファイルパス"
				}
			],
			"description": [
				"スクリプトを実行ファイル化した際に埋め込まれるファイルを追加します。",
				"",
				"$ref(bload)などのファイル読み込み時に、完全に一致するファイル名が埋め込みファイルに存在した場合、埋め込みファイルの内容が読み込まれます。",
				"埋め込みファイルはスタートアップスクリプトから参照できるパスで記述する必要があります。",
				"",
				"埋め込まれるファイルのパス名に制限はありません。",
				"デフォルトではパックされる際にdeflate圧縮が施されます。",
				"※これらの挙動はHSP3非互換です。",
				"",
				"より詳細な埋め込みファイルの指定を行いたい場合は$ref(#n2pack)を参照してください。"
			],
			"relationGroup": [
				"preprocessorCommon"
			]
		},
		"#epack": {
			"type": "preprocessor",
			"summary": "実行ファイルに含めるファイルの追加",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "\"filePath\"",
					"description": "追加するファイルパス"
				}
			],
			"description": [
				"スクリプトを実行ファイル化した際に埋め込まれるファイルを追加します。",
				"内容は$ref(#pack)と違いがないため、詳細はそちらを参照してください。"
			],
			"relationGroup": [
				"preprocessorCommon"
			]
		},
		"#n2pack": {
			"type": "preprocessor",
			"summary": "実行ファイルに含めるファイルの追加",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "srcfile=\"sourceFilePath\"",
					"description": "埋め込む元ファイルのパス"
				},
				{
					"name": "filepath=\"filePath\"",
					"description": "埋め込み後のランタイムから参照できるパス"
				},
				{
					"name": "compress=\"compressFormat\"",
					"description": "ファイル圧縮フォーマット",
					"omitted": "z",
					"limit": "[none, z, ulz]"
				},
				{
					"name": "compressLevel=\"level\"",
					"description": "ファイル圧縮レベル",
					"omitted": "1",
					"limit": "[1, 9]"
				}
			],
			"description": [
				"※このマクロは未実装です。",
				"",
				"スクリプトを実行ファイル化した際に埋め込まれるファイルを追加します。",
				"",
				"各パラメータはこのリファレンスで記述された順番に書く必要はありません。",
				"全てのパラメータは `parameterName = value` の形で記述され、`parameterName` によって自動的に内容が認識されます。",
				"ただし、各パラメータの区切りとなる `,（カンマ）` は必要です。",
				"",
				"省略時の値が設定されたパラメータは省略することが可能です。",
				"",
				"$ref(#pack)と違い、埋め込みファイルとして参照するファイルパスと埋め込み元のファイルパスを別としたり、ファイル圧縮の設定を変更することができます。"
			],
			"relationGroup": [
				"preprocessorCommon"
			]
		},

		"__hspver__": {
			"type": "macro",
			"summary": "HSPのバージョン番号",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"参考元のHSP3のバージョン番号を表すマクロです。",
				"これはHSP3の互換性のために用意されたマクロで、HSP3.6以降の値（`0x3600`より大きい値）になっています。"
			],
			"relationGroup": [
				"macroCommon"
			]
		},
		"__hsp30__": {
			"type": "macro",
			"summary": "HSP3以降を表すマクロ",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"参考元のHSP3以降を表すマクロです。",
				"これはHSP3の互換性のために用意されたマクロで、中身は定義されていません（空のマクロです）。"
			],
			"relationGroup": [
				"macroCommon"
			]
		},
		"__debug__": {
			"type": "macro",
			"summary": "デバッグ実行を表すマクロ",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"デバッグ実行時に定義されるマクロです。",
				"※デバッグ実行とは、現状ではDebugAdapter経由でのデバッグあり実行時を指します。"
			],
			"relationGroup": [
				"macroCommon"
			]
		},
		"__nhspver__": {
			"type": "macro",
			"summary": "バージョンを表すマクロ",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"nidonehsp自身のバージョンを表すマクロです。",
				"",
				"このマクロはHSP3では定義されないため、nidonehsp固有の処理を行いたい場合はこのマクロの定義によって場合分けできます。"
			],
			"relationGroup": [
				"macroCommon"
			]
		},

		"__line__": {
			"type": "macro",
			"summary": "現在の行数を表すマクロ",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"現在の行数を表す特殊マクロです。"
			],
			"relationGroup": [
				"macroCommon"
			]
		},

		"M_PI": {
			"type": "constant",
			"summary": "円周率",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"円周率を表す実数の定数です。"
			],
			"relationGroup": [
				"mathConstantCommon"
			]
		},
		"M_E": {
			"type": "constant",
			"summary": "ネイピア数",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"自然対数の底であるネイピア数を表す実数の定数です。"
			],
			"relationGroup": [
				"mathConstantCommon"
			]
		},

		"typeid_nil": {
			"type": "constant",
			"summary": "nilの型ID",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"nilの型IDを示す整数の定数です。"
			],
			"relationGroup": [
				"constantCommon"
			]
		},
		"typeid_label": {
			"type": "constant",
			"summary": "labelの型ID",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"labelの型IDを示す整数の定数です。"
			],
			"relationGroup": [
				"constantCommon"
			]
		},
		"typeid_str": {
			"type": "constant",
			"summary": "strの型ID",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"strの型IDを示す整数の定数です。"
			],
			"relationGroup": [
				"constantCommon"
			]
		},
		"typeid_double": {
			"type": "constant",
			"summary": "doubleの型ID",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"doubleの型IDを示す整数の定数です。"
			],
			"relationGroup": [
				"constantCommon"
			]
		},
		"typeid_int": {
			"type": "constant",
			"summary": "intの型ID",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"intの型IDを示す整数の定数です。"
			],
			"relationGroup": [
				"constantCommon"
			]
		},
		"typeid_modinst": {
			"type": "constant",
			"summary": "modinstの型ID",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"modinstの型IDを示す整数の定数です。"
			],
			"relationGroup": [
				"constantCommon"
			]
		},
		"typeid_var": {
			"type": "constant",
			"summary": "varの型ID",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"varの型IDを示す整数の定数です。"
			],
			"relationGroup": [
				"constantCommon"
			]
		},

		"imgfile_bmp@n2": {
			"type": "constant",
			"summary": "BMPのフォーマットID",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"BMPのフォーマットIDを示す整数の定数です。"
			],
			"relationGroup": [
				"imageConstantCommon"
			]
		},
		"imgfile_jpg@n2": {
			"type": "constant",
			"summary": "JPGのフォーマットID",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"JPGのフォーマットIDを示す整数の定数です。"
			],
			"relationGroup": [
				"imageConstantCommon"
			]
		},
		"imgfile_png@n2": {
			"type": "constant",
			"summary": "PNGのフォーマットID",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"PNGのフォーマットIDを示す整数の定数です。"
			],
			"relationGroup": [
				"imageConstantCommon"
			]
		},
		"imgfile_tga@n2": {
			"type": "constant",
			"summary": "TGAのフォーマットID",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"TGAのフォーマットIDを示す整数の定数です。"
			],
			"relationGroup": [
				"imageConstantCommon"
			]
		},

		"ease_linear": {
			"type": "constant",
			"summary": "Linearイージング",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"Linearなイージングを示す整数の定数です。"
			],
			"relationGroup": [
				"easeConstantCommon"
			]
		},
		"ease_quad_in": {
			"type": "constant",
			"summary": "QuadInイージング",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"QuadInなイージングを示す整数の定数です。"
			],
			"relationGroup": [
				"easeConstantCommon"
			]
		},
		"ease_quad_out": {
			"type": "constant",
			"summary": "QuadOutイージング",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"QuadOutなイージングを示す整数の定数です。"
			],
			"relationGroup": [
				"easeConstantCommon"
			]
		},
		"ease_quad_inout": {
			"type": "constant",
			"summary": "QuadInOutイージング",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"QuadInOutなイージングを示す整数の定数です。"
			],
			"relationGroup": [
				"easeConstantCommon"
			]
		},
		"ease_cubic_in": {
			"type": "constant",
			"summary": "CubicInイージング",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"CubicInなイージングを示す整数の定数です。"
			],
			"relationGroup": [
				"easeConstantCommon"
			]
		},
		"ease_cubic_out": {
			"type": "constant",
			"summary": "CubicOutイージング",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"CubicOutなイージングを示す整数の定数です。"
			],
			"relationGroup": [
				"easeConstantCommon"
			]
		},
		"ease_cubic_inout": {
			"type": "constant",
			"summary": "CubicInOutイージング",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"CubicInOutなイージングを示す整数の定数です。"
			],
			"relationGroup": [
				"easeConstantCommon"
			]
		},
		"ease_quartic_in": {
			"type": "constant",
			"summary": "QuarticInイージング",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"QuarticInなイージングを示す整数の定数です。"
			],
			"relationGroup": [
				"easeConstantCommon"
			]
		},
		"ease_quartic_out": {
			"type": "constant",
			"summary": "QuarticOutイージング",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"QuarticOutなイージングを示す整数の定数です。"
			],
			"relationGroup": [
				"easeConstantCommon"
			]
		},
		"ease_quartic_inout": {
			"type": "constant",
			"summary": "QuarticInOutイージング",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"QuarticInOutなイージングを示す整数の定数です。"
			],
			"relationGroup": [
				"easeConstantCommon"
			]
		},
		"ease_bounce_in": {
			"type": "constant",
			"summary": "BounceInイージング",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"BounceInなイージングを示す整数の定数です。"
			],
			"relationGroup": [
				"easeConstantCommon"
			]
		},
		"ease_bounce_out": {
			"type": "constant",
			"summary": "BounceOutイージング",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"BounceOutなイージングを示す整数の定数です。"
			],
			"relationGroup": [
				"easeConstantCommon"
			]
		},
		"ease_bounce_inout": {
			"type": "constant",
			"summary": "BounceInOutイージング",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"BounceInOutなイージングを示す整数の定数です。"
			],
			"relationGroup": [
				"easeConstantCommon"
			]
		},
		"ease_shake_in": {
			"type": "constant",
			"summary": "ShakeInイージング",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"ShakeInなイージングを示す整数の定数です。"
			],
			"relationGroup": [
				"easeConstantCommon"
			]
		},
		"ease_shake_out": {
			"type": "constant",
			"summary": "ShakeOutイージング",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"ShakeOutなイージングを示す整数の定数です。"
			],
			"relationGroup": [
				"easeConstantCommon"
			]
		},
		"ease_shake_inout": {
			"type": "constant",
			"summary": "ShakeInOutイージング",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"ShakeInOutなイージングを示す整数の定数です。"
			],
			"relationGroup": [
				"easeConstantCommon"
			]
		},
		"ease_loop": {
			"type": "constant",
			"summary": "イージングのループ",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"イージングのループを示す整数の定数です。"
			],
			"relationGroup": [
				"easeConstantCommon"
			]
		},

		"end": {
			"type": "function",
			"summary": "プログラム終了",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "exitCode",
					"description": "終了コード",
					"omitted": "0"
				}
			],
			"description": [
				"プログラムの実行終了を要求します。",
				"終了コードをexitCodeとして指定できます。"
			],
			"relationGroup": [
				"programControl"
			]
		},
		"stop": {
			"type": "function",
			"summary": "プログラム停止",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"プログラムの実行を停止します。",
				"このコマンド以降の処理は停止しますが、onErrorイベント割込みは受け付けられます。"
			],
			"relationGroup": [
				"programControl"
			]
		},
		"raise": {
			"type": "function",
			"summary": "例外送出",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "message",
					"description": "エラーメッセージ",
					"omitted": "（デフォルトメッセージ）"
				}
			],
			"description": [
				"例外を送出します。",
				"引数として例外のエラーメッセージを指定することができます。省略した場合のシステムのデフォルトメッセージが使われます。"
			],
			"relationGroup": [
				"exception"
			]
		},

		"isnil": {
			"type": "function",
			"summary": "nil判定",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "value",
					"description": "チェックする値"
				}
			],
			"description": [
				"引数として渡された値がnilかどうかを判定し、nilだったら1を、そうでないなら0を返します。"
			],
			"relationGroup": [
				"typeCheck"
			]
		},

		"int": {
			"type": "function",
			"summary": "整数値に変換",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "value",
					"description": "変換元の値"
				}
			],
			"description": [
				"引数として渡された値を整数として返します。",
				"変換元の値が文字列型の場合、整数値として解釈可能な場合は整数値になりますが、そうでない場合は0が返ります。",
				"変換元の値が整数値として解釈できない型の場合エラーになります。"
			],
			"relationGroup": [
				"typeConversion"
			]
		},
		"double": {
			"type": "function",
			"summary": "実数値に変換",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "value",
					"description": "変換元の値"
				}
			],
			"description": [
				"引数として渡された値を実数として返します。",
				"変換元の値が文字列型の場合、実数値として解釈可能な場合は実数値になりますが、そうでない場合は0が返ります。",
				"変換元の値が実数値として解釈できない型の場合エラーになります。"
			],
			"relationGroup": [
				"typeConversion"
			]
		},
		"str": {
			"type": "function",
			"summary": "文字列に変換",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "value",
					"description": "変換元の値"
				}
			],
			"description": [
				"引数として渡された値を文字列として返します。",
				"変換元の値が文字列として解釈できない型の場合エラーになります。",
				"より詳細にフォーマットを指定して文字列化したい場合、$ref(strf)を使用してください。"
			],
			"relationGroup": [
				"typeConversion"
			]
		},

		"dim": {
			"type": "function",
			"summary": "整数型配列変数として初期化",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "var",
					"description": "初期化する変数"
				},
				{
					"name": "length...",
					"description": "次元の要素数"
				}
			],
			"description": [
				"引数として渡された変数を整数型の配列変数として初期化します。",
				"初期化された後の配列変数の各値は0で初期化されます。"
			],
			"relationGroup": [
				"variableAllocation"
			]
		},
		"ddim": {
			"type": "function",
			"summary": "実数型配列変数として初期化",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "var",
					"description": "初期化する変数"
				},
				{
					"name": "length...",
					"description": "次元の要素数"
				}
			],
			"description": [
				"引数として渡された変数を実数型の配列変数として初期化します。",
				"初期化された後の配列変数の各値は0で初期化されます。"
			],
			"relationGroup": [
				"variableAllocation"
			]
		},
		"sdim": {
			"type": "function",
			"summary": "文字列型配列変数として初期化",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "var",
					"description": "初期化する変数"
				},
				{
					"name": "bufSize",
					"description": "文字列のバッファサイズ"
				},
				{
					"name": "length...",
					"description": "次元の要素数"
				}
			],
			"description": [
				"引数として渡された変数を文字列型の配列変数として初期化します。",
				"初期化された後の配列変数の各値は空文字で初期化されます。",
				"",
				"各要素の初期バッファサイズは、bufSizeで**指定したサイズより大きなサイズ**になります。",
				"$ref(varsize)により得られる値は、ここで指定したサイズよりも大きくなる可能性があるので注意してください。"
			],
			"relationGroup": [
				"variableAllocation"
			]
		},
		"ldim": {
			"type": "function",
			"summary": "ラベル型配列変数として初期化",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "var",
					"description": "初期化する変数"
				},
				{
					"name": "length...",
					"description": "次元の要素数"
				}
			],
			"description": [
				"引数として渡された変数をラベル型の配列変数として初期化します。",
				"初期化された後の配列変数の各値はラベル参照なしで初期化されます。"
			],
			"relationGroup": [
				"variableAllocation"
			]
		},

		"vartype": {
			"type": "function",
			"summary": "型IDを取得",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "var_or_str",
					"description": "型を調べる変数、または型名を表す文字列"
				}
			],
			"description": [
				"引数として渡された変数の型IDを返します。引数が文字列の場合、その文字列と一致する型IDを返します。",
				"引数が変数でない場合や、一致する型名がない文字列の場合はエラーになります。",
				"",
				"型IDとその名前は次の表の通りです。$",
				"$",
				"|型|型名|型ID（整数値）|型IDマクロ|$",
				"|:--|:---|:---|:--|$",
				"|nil|`nil`|0|`typeid_nil`|$",
				"|ラベル型|`label`|1|`typeid_label`|$",
				"|文字列型|`str`|2|`typeid_str`|$",
				"|実数型|`double`|3|`typeid_double`|$",
				"|整数型|`int`|4|`typeid_int`|$",
				"|モジュール変数|`struct`|5|`typeid_modinst`|$",
				"$",
				""
			],
			"relationGroup": [
				"typeQuery"
			]
		},
		"varsize": {
			"type": "function",
			"summary": "変数のバッファサイズ[byte]を取得",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "var",
					"description": "サイズを調べる変数"
				}
			],
			"description": [
				"引数として渡された変数のバッファサイズ[byte]を返します。",
				"`int`型と`double`型の場合指定した要素以降のメモリサイズを、文字列の場合は指定した要素のバッファサイズを返します。",
				"なお、この関数が返すのはバッファサイズであって、例えば実際に文字列がどこまで使っているかのサイズを返すものではないことに注意してください。",
				"このバッファサイズの範囲内に対して$ref(peek)や$ref(poke)によるバッファ操作が行えます。",
				"※ただし、ラベル型やモジュール型など、そもそも書き込み不可能な場合はpokeなどのバッファ操作は失敗します。"
			],
			"relationGroup": [
				"typeQuery"
			]
		},
		"varuse": {
			"type": "function",
			"summary": "変数の使用状況を取得",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "var",
					"description": "使用状況を調べる変数"
				}
			],
			"description": [
				"引数として渡された変数が有効であるか否かを返します。",
				"この関数は変数の型によって挙動が異なり、",
				"・対象がモジュール変数の場合は未初期化（`0`）か初期化済み（`1`）を",
				"・それ以外の型では常に`0`を",
				"返します。"
			],
			"relationGroup": [
				"typeQuery"
			]
		},

		"length": {
			"type": "function",
			"summary": "変数の1次元サイズを取得",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "var",
					"description": "調べる変数"
				}
			],
			"description": [
				"引数として渡された変数の第1次元のサイズを取得します。"
			],
			"relationGroup": [
				"variableQuery"
			]
		},
		"length2": {
			"type": "function",
			"summary": "変数の2次元サイズを取得",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "var",
					"description": "調べる変数"
				}
			],
			"description": [
				"引数として渡された変数の第2次元のサイズを取得します。"
			],
			"relationGroup": [
				"variableQuery"
			]
		},
		"length3": {
			"type": "function",
			"summary": "変数の3次元サイズを取得",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "var",
					"description": "調べる変数"
				}
			],
			"description": [
				"引数として渡された変数の第3次元のサイズを取得します。"
			],
			"relationGroup": [
				"variableQuery"
			]
		},
		"length4": {
			"type": "function",
			"summary": "変数の4次元サイズを取得",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "var",
					"description": "調べる変数"
				}
			],
			"description": [
				"引数として渡された変数の第4次元のサイズを取得します。"
			],
			"relationGroup": [
				"variableQuery"
			]
		},

		"poke": {
			"type": "function",
			"summary": "バッファへ1byte書き込み",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "var",
					"description": "書き込む先の変数"
				},
				{
					"name": "offset",
					"description": "書き込むオフセット[bytes]",
					"omitted": "0"
				},
				{
					"name": "value",
					"description": "書き込む値",
					"omitted": "0",
					"limit": "[0, 255]"
				}
			],
			"description": [
				"引数として渡された変数のバッファに対して、offsetで指定された箇所へ1byte値としてvalueを書き込みます。",
				"書き込む値は1byteのunsignedとして解釈されるため、値域は[0, 255]になります。"
			],
			"relationGroup": [
				"variableBuffer"
			]
		},
		"wpoke": {
			"type": "function",
			"summary": "バッファへ2byte書き込み",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "var",
					"description": "書き込む先の変数"
				},
				{
					"name": "offset",
					"description": "書き込むオフセット[bytes]",
					"omitted": "0"
				},
				{
					"name": "value",
					"description": "書き込む値",
					"omitted": "0",
					"limit": "[0, 65535]"
				}
			],
			"description": [
				"引数として渡された変数のバッファに対して、offsetで指定された箇所へ2byte値としてvalueを書き込みます。",
				"書き込む値は2byteのunsignedとして解釈されるため、値域は[0, 65535]になります。"
			],
			"relationGroup": [
				"variableBuffer"
			]
		},
		"lpoke": {
			"type": "function",
			"summary": "バッファへ4byte書き込み",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "var",
					"description": "書き込む先の変数"
				},
				{
					"name": "offset",
					"description": "書き込むオフセット[bytes]",
					"omitted": "0"
				},
				{
					"name": "value",
					"description": "書き込む値",
					"omitted": "0",
					"limit": "[-2147483648, 2147483647]"
				}
			],
			"description": [
				"引数として渡された変数のバッファに対して、offsetで指定された箇所へ4byte値としてvalueを書き込みます。",
				"書き込む値は4byteのsignedとして解釈されるため、値域は[-2147483648, 2147483647]になります。"
			],
			"relationGroup": [
				"variableBuffer"
			]
		},
		"llpoke": {
			"type": "function",
			"summary": "バッファへ8byte書き込み",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "var",
					"description": "書き込む先の変数"
				},
				{
					"name": "offset",
					"description": "書き込むオフセット[bytes]",
					"omitted": "0"
				},
				{
					"name": "value",
					"description": "書き込む値",
					"omitted": "0"
				}
			],
			"description": [
				"引数として渡された変数のバッファに対して、offsetで指定された箇所へ8byte値としてvalueを書き込みます。",
				"書き込む値は8byteのsignedとして解釈されるため、値域は[-9223372036854775808, 9223372036854775807]になります。"
			],
			"relationGroup": [
				"variableBuffer"
			]
		},
		"peek": {
			"type": "function",
			"summary": "バッファから1byte読み込み",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "var",
					"description": "読み込み元の変数"
				},
				{
					"name": "offset",
					"description": "読み込むオフセット[bytes]",
					"omitted": "0"
				}
			],
			"description": [
				"引数として渡された変数のバッファのoffsetで指定された箇所から1byteを読み取り整数値として返します。",
				"1byteの値はunsignedとして読み取られるため、戻り値の値域は[0, 255]になります。"
			],
			"relationGroup": [
				"variableBuffer"
			]
		},
		"wpeek": {
			"type": "function",
			"summary": "バッファから2byte読み込み",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "var",
					"description": "読み込み元の変数"
				},
				{
					"name": "offset",
					"description": "読み込むオフセット[bytes]",
					"omitted": "0"
				}
			],
			"description": [
				"引数として渡された変数のバッファのoffsetで指定された箇所から2byteを読み取り整数値として返します。",
				"2byteの値はunsignedとして読み取られるため、戻り値の値域は[0, 65535]になります。"
			],
			"relationGroup": [
				"variableBuffer"
			]
		},
		"lpeek": {
			"type": "function",
			"summary": "バッファから4byte読み込み",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "var",
					"description": "読み込み元の変数"
				},
				{
					"name": "offset",
					"description": "読み込むオフセット[bytes]",
					"omitted": "0"
				}
			],
			"description": [
				"引数として渡された変数のバッファのoffsetで指定された箇所から4byteを読み取り整数値として返します。",
				"4byteの値はsignedとして読み取られるため、戻り値の値域は[-2147483648, 2147483647]になります。"
			],
			"relationGroup": [
				"variableBuffer"
			]
		},
		"llpeek": {
			"type": "function",
			"summary": "バッファから8byte読み込み",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "var",
					"description": "読み込み元の変数"
				},
				{
					"name": "offset",
					"description": "読み込むオフセット[bytes]",
					"omitted": "0"
				}
			],
			"description": [
				"引数として渡された変数のバッファのoffsetで指定された箇所から8byteを読み取り整数値として返します。",
				"8byteの値はsignedとして読み取られるため、戻り値の値域は[-9223372036854775808, 9223372036854775807]になります。"
			],
			"relationGroup": [
				"variableBuffer"
			]
		},

		"sortval": {
			"type": "function",
			"summary": "変数の中身をソート",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "var",
					"description": "要素をソートする変数"
				},
				{
					"name": "reverse",
					"description": "ソート順（0=昇順／1=降順）",
					"omitted": "0"
				}
			],
			"description": [
				"引数として渡された変数の要素を（安定）ソートします",
				"この命令の後、渡した引数の中身はソートされた状態になっている（破壊的な操作）ことに注意してください。",
				"また、この命令は数値型の1次元変数のみを対象としており、それ以外の型、次元の変数が渡された場合はエラーとなります。",
				"",
				"各要素のソート前の位置を取得するためには$ref(sortget)を使用してください。"
			],
			"relationGroup": [
				"sorting"
			]
		},
		"sortstr": {
			"type": "function",
			"summary": "変数の中身をソート",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "var",
					"description": "要素をソートする変数"
				},
				{
					"name": "reverse",
					"description": "ソート順（0=昇順／1=降順）",
					"omitted": "0"
				}
			],
			"description": [
				"引数として渡された変数の要素を（安定）ソートします",
				"この命令の後、渡した引数の中身はソートされた状態になっている（破壊的な操作）ことに注意してください。",
				"また、この命令は文字列型の1次元変数のみを対象としており、それ以外の型、次元の変数が渡された場合はエラーとなります。",
				"",
				"各要素のソート前の位置を取得するためには$ref(sortget)を使用してください。"
			],
			"relationGroup": [
				"sorting"
			]
		},
		"sortnote": {
			"type": "function",
			"summary": "変数の中身をnote形式としてソート",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "var",
					"description": "note形式でソートする変数"
				},
				{
					"name": "reverse",
					"description": "ソート順（0=昇順／1=降順）",
					"omitted": "0"
				}
			],
			"description": [
				"引数として渡された変数の要素をnote形式の文字列とみなして（安定）ソートします",
				"この命令の後、渡した引数の中身はソートされた状態の文字列に置き換わります。",
				"また、この命令は文字列型の変数要素のみを対象としており、それ以外の型の変数が渡された場合はエラーとなります。",
				"",
				"各要素のソート前の位置を取得するためには$ref(sortget)を使用してください。"
			],
			"relationGroup": [
				"sorting"
			]
		},
		"sortget": {
			"type": "function",
			"summary": "ソート前の位置を取得",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "var",
					"description": "結果を代入する変数"
				},
				{
					"name": "index",
					"description": "ソート順（0=昇順／1=降順）",
					"omitted": "0"
				}
			],
			"description": [
				"sortval、sortstrによってソートされた値のインデックスから、ソート前の配列中の位置（インデックス）を返します。"
			],
			"relationGroup": [
				"sorting"
			]
		},

		"randomize": {
			"type": "function",
			"summary": "乱数シードの初期化",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "seed",
					"description": "乱数シード",
					"omitted": "システムから自動取得"
				}
			],
			"description": [
				"$ref(rnd)で発生させる乱数のシード値を設定します。",
				"乱数シードはその後の乱数の生成パターンを一意に決めるもので、同じ乱数シードを指定した場合、常に同じ結果が得られます。",
				"",
				"引数seedを省略した場合、乱数シードはシステムのTick値などを用いてなるべく予想不可能な値を使用します。",
				"",
				"デフォルトでは起動時の乱数シードの初期値は固定されているため、スクリプト起動毎の乱数列は固定となっています。",
				"起動毎に乱数シードを変化させたい場合、改めてスクリプト側から引数なしのrandomizeを呼んでください。"
			],
			"relationGroup": [
				"random"
			]
		},
		"rnd": {
			"type": "function",
			"summary": "乱数の取得",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "limit",
					"description": "乱数の範囲",
					"limit": "1 ～"
				}
			],
			"description": [
				"[0, limit)の範囲から整数乱数を発生させその値を返します。",
				"範囲の中にlimitの値入っておらず、limit未満の値が返ってくることに注意してください。"
			],
			"relationGroup": [
				"random"
			]
		},

		"rndf@n2": {
			"type": "function",
			"summary": "実数乱数の取得",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "limit",
					"description": "乱数の範囲",
					"omitted": "1",
					"limit": "0 ～"
				}
			],
			"description": [
				"(0, limit)の範囲から実数乱数を発生させその値を返します。",
				"範囲の中にlimitの値入っておらず、limit未満の値が返ってくることに注意してください。"
			],
			"relationGroup": [
				"random"
			]
		},
		"abs": {
			"type": "function",
			"summary": "整数の絶対値の取得",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "value",
					"description": "絶対値を取得する値"
				}
			],
			"description": [
				"valueの絶対値をとった値を整数として返します。",
				"絶対値を実数として取り出したい場合は$ref(absf)を使用してください。"
			],
			"relationGroup": [
				"mathRange"
			]
		},
		"absf": {
			"type": "function",
			"summary": "実数の絶対値の取得",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "value",
					"description": "絶対値を取得する値"
				}
			],
			"description": [
				"valueの絶対値をとった値を実数として返します。",
				"絶対値を整数として取り出したい場合は$ref(abs)を使用してください。"
			],
			"relationGroup": [
				"mathRange"
			]
		},
		"limit": {
			"type": "function",
			"summary": "整数値を範囲内に収める",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "value",
					"description": "対象の値"
				},
				{
					"name": "min",
					"description": "範囲の下限値",
					"omitted": "下限値なし"
				},
				{
					"name": "max",
					"description": "範囲の上限値",
					"omitted": "上限値なし"
				}
			],
			"description": [
				"valueを[min, max]の範囲に収めてその値を返します。",
				"",
				"この関数は、$",
				"$",
				"- valueがmin未満ならminにする$",
				"- その後valueがmax超過ならmaxにする$",
				"$",
				"という処理を行っているだけで、minとmaxの上下関係については考慮しません。",
				"なお、min、maxはそれぞれ指定を省略した場合、それらの範囲内に収める処理を行いません。",
				"",
				"範囲内に収めた実数値を取得したい場合、$ref(limitf)を使用してください。"
			],
			"relationGroup": [
				"mathRange"
			]
		},
		"limitf": {
			"type": "function",
			"summary": "実数値を範囲内に収める",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "value",
					"description": "対象の値"
				},
				{
					"name": "min",
					"description": "範囲の下限値",
					"omitted": "下限値なし"
				},
				{
					"name": "max",
					"description": "範囲の上限値",
					"omitted": "上限値なし"
				}
			],
			"description": [
				"valueを[min, max]の範囲に収めてその値を返します。",
				"",
				"この関数は、$",
				"$",
				"- valueがmin未満ならminにする$",
				"- その後valueがmax超過ならmaxにする$",
				"$",
				"という処理を行っているだけで、minとmaxの上下関係については考慮しません。",
				"なお、min、maxはそれぞれ指定を省略した場合、それらの範囲内に収める処理を行いません。",
				"",
				"範囲内に収めた整数値を取得したい場合、$ref(limit)を使用してください。"
			],
			"relationGroup": [
				"mathRange"
			]
		},

		"deg2rad": {
			"type": "function",
			"summary": "度をラジアンに変換",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "degree",
					"description": "変換する度"
				}
			],
			"description": [
				"degreeを度とみなしてラジアンに変換した実数値を返します。"
			],
			"relationGroup": [
				"mathTrigonometric"
			]
		},
		"rad2deg": {
			"type": "function",
			"summary": "ラジアンを度に変換",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "radian",
					"description": "変換するラジアン"
				}
			],
			"description": [
				"radianをラジアンとみなして度に変換した実数値を返します。"
			],
			"relationGroup": [
				"mathTrigonometric"
			]
		},
		"sin": {
			"type": "function",
			"summary": "サイン値（正弦）を取得",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "radian",
					"description": "角度[radian]"
				}
			],
			"description": [
				"radianのサイン値（正弦）を返します。"
			],
			"relationGroup": [
				"mathTrigonometric"
			]
		},
		"cos": {
			"type": "function",
			"summary": "コサイン値（余弦）を取得",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "radian",
					"description": "角度[radian]"
				}
			],
			"description": [
				"radianのコサイン値（余弦）を返します。"
			],
			"relationGroup": [
				"mathTrigonometric"
			]
		},
		"tan": {
			"type": "function",
			"summary": "タンジェント値（正接）を取得",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "radian",
					"description": "角度[radian]"
				}
			],
			"description": [
				"radianのタンジェント値（正接）を返します。"
			],
			"relationGroup": [
				"mathTrigonometric"
			]
		},
		"asin": {
			"type": "function",
			"summary": "サインから角度[radian]を取得",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "value",
					"description": "サイン値",
					"limit": "[-1, 1]"
				}
			],
			"description": [
				"valueをサイン値と見做してその角度[radian]を返します。",
				"戻り値の値域は[-pi/2, pi/2]になります。"
			],
			"relationGroup": [
				"mathTrigonometric"
			]
		},
		"acos": {
			"type": "function",
			"summary": "コサインから角度[radian]を取得",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "value",
					"description": "コサイン値",
					"limit": "[-1, 1]"
				}
			],
			"description": [
				"valueをコサイン値と見做してその角度[radian]を返します。",
				"戻り値の値域は[0, pi]になります。"
			],
			"relationGroup": [
				"mathTrigonometric"
			]
		},
		"atan": {
			"type": "function",
			"summary": "傾きから角度[radian]を取得",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "y",
					"description": "傾きのy成分"
				},
				{
					"name": "x",
					"description": "傾きのx成分"
				}
			],
			"description": [
				"座標(0, 0)と座標(x, y)を結んだ線分が為す角度をラジアンとして返します。",
				"戻り値の値域は[-pi, pi]になります。"
			],
			"relationGroup": [
				"mathTrigonometric"
			]
		},
		"sqrt": {
			"type": "function",
			"summary": "平方根を取得",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "value",
					"description": "平方根をとる値",
					"limit": "0 ～"
				}
			],
			"description": [
				"valueの平方根を実数として返します。"
			],
			"relationGroup": [
				"mathCommon"
			]
		},
		"powf": {
			"type": "function",
			"summary": "累乗を取得",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "base",
					"description": "累乗の底",
					"limit": "0 ～"
				},
				{
					"name": "exp",
					"description": "累乗の指数"
				}
			],
			"description": [
				"baseをexp乗した値を取得します。"
			],
			"relationGroup": [
				"mathCommon"
			]
		},
		"expf": {
			"type": "function",
			"summary": "ネイピア数の累乗を取得",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "exp",
					"description": "累乗の指数"
				}
			],
			"description": [
				"自然対数の底（ネイピア数）eをexp乗した値を取得します。"
			],
			"relationGroup": [
				"mathCommon"
			]
		},
		"logf": {
			"type": "function",
			"summary": "自然対数を取得",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "value",
					"description": "対数をとる値"
				}
			],
			"description": [
				"valueの、ネイピア数eを底とした自然対数を取得します。"
			],
			"relationGroup": [
				"mathCommon"
			]
		},
		"round": {
			"type": "function",
			"summary": "四捨五入した値の取得",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "value",
					"description": "四捨五入する値"
				}
			],
			"description": [
				"valueの四捨五入した値を実数値として返します。"
			],
			"relationGroup": [
				"mathCommon"
			]
		},
		"floor": {
			"type": "function",
			"summary": "小数点以下切り捨て",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "value",
					"description": "小数点以下切り捨てする値"
				}
			],
			"description": [
				"valueの小数点以下を切り捨てた値を実数値として返します。"
			],
			"relationGroup": [
				"mathCommon"
			]
		},
		"ceil": {
			"type": "function",
			"summary": "小数点以下切り上げ",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "value",
					"description": "小数点以下切り上げする値"
				}
			],
			"description": [
				"valueの小数点以下を切り上げた値を実数値として返します。"
			],
			"relationGroup": [
				"mathCommon"
			]
		},
		"lerpf@n2": {
			"type": "function",
			"summary": "線形補間",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "a",
					"description": "開始値"
				},
				{
					"name": "b",
					"description": "終了値"
				},
				{
					"name": "t",
					"description": "補間値"
				}
			],
			"description": [
				"aからbまでをtによって線形補間した値を返します。"
			],
			"relationGroup": [
				"mathCommon"
			]
		},
		"setease": {
			"type": "function",
			"summary": "イージングの設定",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "outMin",
					"description": "出力最小値",
					"omitted": "0"
				},
				{
					"name": "outMax",
					"description": "出力最大値",
					"omitted": "1"
				},
				{
					"name": "easeType",
					"description": "イージングのタイプ"
				}
			],
			"description": [
				"$ref(getease)や$ref(geteasef)での出力値の範囲と、イージングの計算式を設定します。",
				"",
				"イージングのタイプとして設定できる値は次の表の通りです。$",
				"$",
				"|マクロ|内容|$",
				"|:--|:--|$",
				"|ease_linear|線形補間|$",
				"|ease_quad_in|二次補間（加速）|$",
				"|ease_quad_out|二次補間（加速）|$",
				"|ease_quad_inout|二次補間|$",
				"|ease_cubic_in|三次補間（加速）|$",
				"|ease_cubic_out|三次補間（加速）|$",
				"|ease_cubic_inout|三次補間|$",
				"|ease_quartic_in|四次補間（加速）|$",
				"|ease_quartic_out|四次補間（加速）|$",
				"|ease_quartic_inout|四次補間|$",
				"|ease_bounce_in|バウンス補間（加速）|$",
				"|ease_bounce_out|バウンス補間（加速）|$",
				"|ease_bounce_inout|バウンス補間|$",
				"|ease_shake_in|振動補間（加速）|$",
				"|ease_shake_out|振動補間（加速）|$",
				"|ease_shake_inout|振動補間|$",
				"$",
				"また、イージングのタイプに加えて次の表のビットを付加することで、追加の挙動を設定できます。$",
				"$",
				"|マクロ|内容|$",
				"|:--|:--|$",
				"|ease_loop|補間の入力値のリピート|$",
				"$",
				""
			],
			"relationGroup": [
				"mathCommon"
			]
		},
		"getease": {
			"type": "function",
			"summary": "イージング補間",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "timeVal",
					"description": "経過時間",
					"omitted": "0"
				},
				{
					"name": "timeMax",
					"description": "経過時間（最大）",
					"omitted": "-1"
				}
			],
			"description": [
				"$ref(setease)での設定に従ってイージングした結果を整数値で返します。",
				"timeMaxは0以下だった場合、`4096`として扱われます。",
				"",
				"この関数は`timeVal / timeMax`の値を補間率として、$ref(setease)で設定したイージングを行います。",
				"得られる値は$ref(setease)で設定した出力値の範囲内になります。"
			],
			"relationGroup": [
				"mathCommon"
			]
		},
		"geteasef": {
			"type": "function",
			"summary": "イージング補間",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "timeVal",
					"description": "経過時間",
					"omitted": "0"
				},
				{
					"name": "timeMax",
					"description": "経過時間（最大）",
					"omitted": "-1"
				}
			],
			"description": [
				"$ref(setease)での設定に従ってイージングした結果を実数値で返します。",
				"詳細については$ref(getease)を参照してください。"
			],
			"relationGroup": [
				"mathCommon"
			]
		},
		"ease@n2": {
			"type": "function",
			"summary": "イージング補間",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "easingType",
					"description": "イージングのタイプ",
					"omitted": "0"
				},
				{
					"name": "t",
					"description": "補間率",
					"omitted": "0"
				},
				{
					"name": "outMin",
					"description": "出力最小値",
					"omitted": "0"
				},
				{
					"name": "outMax",
					"description": "出力最大値",
					"omitted": "1"
				}
			],
			"description": [
				"補間率をtとして、easingTypeで設定したイージングを行い、出力をoutMinからoutMaxの範囲に丸めて返します。",
				"イージングのタイプなどは$ref(setease)を参照してください。",
				"",
				"$ref(setease)と$ref(geteasef)をひとまとめにした命令に近いですが、$ref(setease)と違いグローバルな設定を変更しません。"
			],
			"relationGroup": [
				"mathCommon"
			]
		},

		"strlen": {
			"type": "function",
			"summary": "文字列の長さ（バイト長）を取得",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "str",
					"description": "長さを調べる文字列"
				}
			],
			"description": [
				"strで指定した文字列のバイト長を返します。",
				"文字列以外の値を渡した場合エラーになります。"
			],
			"relationGroup": [
				"stringCommon"
			]
		},
		"strrep": {
			"type": "function",
			"summary": "文字列を置換",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "var",
					"description": "文字列を格納した変数"
				},
				{
					"name": "pattern",
					"description": "置き換えるパターン文字列"
				},
				{
					"name": "to",
					"description": "置き換え後の文字列"
				}
			],
			"description": [
				"varが保持する文字列内で、patternに一致する文字列をtoに置き換えます。",
				"varの変数の内容が変更されるので注意してください。",
				"実際に置き換えた回数を戻り値として返します。"
			],
			"relationGroup": [
				"stringCommon"
			]
		},
		"instr": {
			"type": "function",
			"summary": "文字列の検索",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "str",
					"description": "検索対象の文字列"
				},
				{
					"name": "offset",
					"description": "検索を開始するオフセット[byte]"
				},
				{
					"name": "pattern",
					"description": "置き換えるパターン文字列"
				}
			],
			"description": [
				"strで指定した文字列内で、offset以降でpatternに一致する文字列の開始位置[byte]を返します。",
				"patternに合致する文字列が存在しなかった場合、-1が返ります。",
				"また、strが文字列型でない場合エラーになります。"
			],
			"relationGroup": [
				"stringCommon"
			]
		},
		"strmid": {
			"type": "function",
			"summary": "部分文字列を取得",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "str",
					"description": "対象の文字列"
				},
				{
					"name": "offset",
					"description": "文字列の部分オフセット[byte]"
				},
				{
					"name": "length",
					"description": "文字列の部分サイズ[byte]"
				}
			],
			"description": [
				"strで指定した文字列において、offsetから始まるlength分の部分文字列を返します。",
				"offsetにマイナスの値を指定した場合、文字列の後ろを起点とし、後ろから数えてoffsetから始まるlength分の部分文字列を返します。",
				"offsetが文字列のサイズを超える場合、空文字が返されます。",
				"offset以降の部分文字列がlength以下の場合、取り出し可能なサイズの部分文字列が返されます。"
			],
			"relationGroup": [
				"stringCommon"
			]
		},
		"strtrim": {
			"type": "function",
			"summary": "指定文字列を除外",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "var",
					"description": "元の文字列を保持する変数"
				},
				{
					"name": "mode",
					"description": "文字列を除去するモード",
					"omitted": "0"
				},
				{
					"name": "codepoint",
					"description": "除去する文字コード",
					"omitted": "32（スペースのコードポイント）",
					"limit": "有効なユニコードのコードポイント"
				}
			],
			"description": [
				"varに格納されている文字列から、codepointで指定された文字を除去します。",
				"",
				"除去する処理モードは次の通りです。$",
				"$",
				"|mode|処理内容|$",
				"|:---|:---|$",
				"|0|両端にある文字を除去|$",
				"|1|左端にある文字を除去|$",
				"|2|右端にある文字を除去|$",
				"|3|全ての文字を除去|$",
				"$"
			],
			"relationGroup": [
				"stringCommon"
			]
		},
		"strf": {
			"type": "function",
			"summary": "書式付き文字列変換",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "format",
					"description": "書式付き文字列"
				},
				{
					"name": "args...",
					"description": "書式指定パラメータ"
				}
			],
			"description": [
				"formatで渡した文字列の書式にしたがって、書式指定パラメータを文字列化したものを返します。",
				"書式付き文字列では、`%`から始まる特定の書式指定子に従って、書式指定パラメータを順番に文字列化していきます。",
				"",
				"具体的な使い方についてはサンプルを参照してください。",
				"",
				"指定できる書式指定子は次の表の通りです。$",
				"$",
				"|書式指定子|内容|$",
				"|:---|:---|$",
				"|d|10進数符号付き整数|$",
				"|i|10進数符号付き整数|$",
				"|u|10進数符号なし整数|$",
				"|c|1バイト文字コード|$",
				"|o|8進数符号付き整数|$",
				"|x|16進数符号付き整数（アルファベット小文字）|$",
				"|X|16進数符号付き整数（アルファベット大文字）|$",
				"|f|小数形式実数|$",
				"|e|指数形式実数（アルファベット小文字）|$",
				"|E|指数形式実数（アルファベット大文字）|$",
				"|g|小数形式／指数形式の適した形式による実数（アルファベット小文字）|$",
				"|G|小数形式／指数形式の適した形式による実数（アルファベット大文字）|$",
				"|s|文字列|$",
				"|U|ユニコード文字|$",
				"|p|ポインタ（16進数）|$",
				"|%|「%」を出力|$",
				"$",
				"また、`%`から書式指定子までに現れる`スペース`、`#`、`+`、`-`、`.`、`0 - 9`までの数値は変換指定のフラグとして機能します。$",
				"$",
				"|変換フラグ|内容|$",
				"|:---|:---|$",
				"| （スペース）|長さ指定より文字列化したサイズが小さい場合、余った部分をスペースで埋める|$",
				"|+|数値において常に符号を出力（正の場合+が、負の場合-が付加されます）|$",
				"|-|長さ指定時に文字列を左寄せ|$",
				"|0|長さ指定より文字列化したサイズが小さい場合、余った部分を0で埋める|$",
				"|.|実数の際の、変換フラグの小数点区切り|$",
				"|1-9|長さ指定|$",
				"$"
			],
			"example": [
				{
					"summary": "基本的な使い方",
					"code": [
						"mes strf(\"%d\", 10)",
						"// => 10",
						"",
						"mes strf(\":% 5d:\", 10)",
						"// => :   10:",
						"",
						"mes strf(\":%05d:\", 10)",
						"// => :00010:",
						"",
						"mes strf(\":%-05d:\", 10)",
						"// => :10   :",
						"",
						"mes strf(\"%+05d\", 10)",
						"// => +0010",
						"",
						"mes strf(\"%x\", 10)",
						"// => a",
						"",
						"mes strf(\"%X\", 10)",
						"// => A",
						"",
						"mes strf(\"%c\", 68)",
						"// => D // 68はASCIIコードでD",
						"",
						"mes strf(\"%U\", 'ソ')",
						"// => ソ // シングルクォートはUnicodeのコードポイントを返す",
						"",
						"mes strf(\"%f\", 20.22)",
						"// => 20.220000",
						"",
						"mes strf(\"%.1f\", 20.22)",
						"// => 20.2",
						"",
						"mes strf(\":%10.5f:\", 20.22)",
						"// => :  20.22000:",
						"",
						"mes strf(\"%e\", 20.22)",
						"// => 2.022000e+01",
						"",
						"mes strf(\"%E\", 20.22)",
						"// => 2.022000E+01",
						"",
						"mes strf(\"%g\", 20.22)",
						"// => 20.22",
						"",
						"mes strf(\"%G\", 20.22)",
						"// => 20.22",
						"",
						"mes strf(\"%s\", \"mystr\")",
						"// => mystr"
					]
				}
			],
			"relationGroup": [
				"stringCommon"
			]
		},
		"getpath": {
			"type": "function",
			"summary": "パスの一部を取得",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "path",
					"description": "パス文字列"
				},
				{
					"name": "mode",
					"description": "取り出しモード"
				}
			],
			"description": [
				"パス文字列pathからmodeに従ってパスの一部分を抽出します。",
				"具体的な使い方についてはサンプルを参照してください。",
				"",
				"modeの各意味は次の表の通りです。$",
				"$",
				"|書式指定子|内容|$",
				"|:---|:---|$",
				"|0|なにもしない（pathをそのまま返す）|$",
				"|1|拡張子を除外|$",
				"|2|拡張子のみ|$",
				"|8|ディレクトリを除外|$",
				"|16|文字列を小文字に変換する|$",
				"|32|ディレクトリのみ抽出|$",
				"$",
				"各mode値は加算またはビット和をとることで複数指定を行えます。"
			],
			"example": [
				{
					"summary": "基本的な使い方",
					"code": [
						"path = \"D:\\path\\to\\file.txt\"",
						"mes \"0=\" + getpath(path, 0)",
						"mes \"1=\" + getpath(path, 1)",
						"mes \"2=\" + getpath(path, 2)",
						"mes \"8=\" + getpath(path, 8)",
						"mes \"16=\" + getpath(path, 16)",
						"mes \"32=\" + getpath(path, 32)",
						"// 0=D:\\path\\to\\file.txt",
						"// 1=D:\\path\\to\\file",
						"// 2=.txt",
						"// 8=file.txt",
						"// 16=d:\\path\\to\\file.txt",
						"// 32=D:\\path\\to\\"
					]
				}
			],
			"relationGroup": [
				"stringCommon"
			]
		},
		"cnvwtos": {
			"type": "function",
			"summary": "UTF16を内部エンコーディングへ変換",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "str",
					"description": "UTF16の文字列"
				}
			],
			"description": [
				"UTF16の文字列を内部エンコーディングの文字列へ変換して返します。",
				"現時点での内部エンコーディングはUTF8になっています。"
			],
			"relationGroup": [
				"stringCommon"
			]
		},
		"cnvstow": {
			"type": "function",
			"summary": "内部エンコーディングをUTF16へ変換",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "str",
					"description": "文字列"
				}
			],
			"description": [
				"内部エンコーディングの文字列をUTF16の文字列へ変換して返します。",
				"現時点での内部エンコーディングはUTF8になっています。"
			],
			"relationGroup": [
				"stringCommon"
			]
		},
		"cnvatos": {
			"type": "function",
			"summary": "ShiftJISを内部エンコーディングへ変換",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "str",
					"description": "文字列"
				}
			],
			"description": [
				"ShiftJIS（cp932）の文字列を内部エンコーディングの文字列へ変換して返します。",
				"現時点での内部エンコーディングはUTF8になっています。"
			],
			"relationGroup": [
				"stringCommon"
			]
		},
		"cnvstoa": {
			"type": "function",
			"summary": "内部エンコーディングをShiftJISへ変換",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "str",
					"description": "文字列"
				}
			],
			"description": [
				"内部エンコーディングの文字列をShiftJIS（cp932）の文字列へ変換して返します。",
				"現時点での内部エンコーディングはUTF8になっています。"
			],
			"relationGroup": [
				"stringCommon"
			]
		},
		"strcodepoints@n2": {
			"type": "function",
			"summary": "コードポイントを配列に変換",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "outVar",
					"description": "コードポイントを格納する変数"
				},
				{
					"name": "str",
					"description": "文字列"
				}
			],
			"description": [
				"strで指定した文字列の各文字のコードポイントをoutVarに配列として格納します。",
				"この命令により、outVarは整数型の1次元配列に初期化されます。",
				"この命令後、$ref(strsize)に格納されたコードポイントの数（＝文字数）が格納されます。",
				"なお、outVarの配列サイズはコードポイントの数より大きい値になり得るため、$ref(length)等で得られる値とは異なる可能性があります。"
			],
			"relationGroup": [
				"stringCommon"
			]
		},

		"reintfb2d@n2": {
			"type": "function",
			"summary": "floatとintのビットキャスト",
			"group": ["basics"],
			"tag": ["n2"],
			"parameters": [
				{
					"name": "floatBits",
					"description": "floatとして解釈する整数値"
				}
			],
			"description": [
				"floatBitsで指定した整数値を、float（4 バイト幅の浮動小数点）値として解釈した値を実数値で返します。",
				"この命令は動的ライブラリなど外部関数と連携する際など特殊な用途を想定しています。"
			],
			"relationGroup": [
				"typeConversion"
			]
		},
		"reintd2fb@n2": {
			"type": "function",
			"summary": "floatとintのビットキャスト",
			"group": ["basics"],
			"tag": ["n2"],
			"parameters": [
				{
					"name": "floatValue",
					"description": "floatとして出力する実数値"
				}
			],
			"description": [
				"floatValueで指定した実数値を、float（4 バイト幅の浮動小数点）値として出力した際の整数値として返します。",
				"この命令は動的ライブラリなど外部関数と連携する際など特殊な用途を想定しています。"
			],
			"relationGroup": [
				"typeConversion"
			]
		},

		"exist": {
			"type": "function",
			"summary": "指定したファイルのサイズを取得",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "filePath",
					"description": "サイズを調べるファイルパス"
				}
			],
			"description": [
				"filePathで指定したファイルのファイルサイズを取得し、$ref(strsize)に格納ます",
				"",
				"もし指定したファイルが存在しない場合、エラーにはならず`-1`が格納されます。",
				"これにより、ファイルの存在確認に用いることができます。"
			],
			"relationGroup": [
				"fileIOCommon"
			]
		},
		"delete": {
			"type": "function",
			"summary": "指定したファイルの削除",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "filePath",
					"description": "削除するファイルパス"
				}
			],
			"description": [
				"filePathで指定したファイルを削除します。",
				"",
				"ファイルの削除に失敗した場合エラーとなります。",
				"そのため、ファイルが存在するかを実行前に$ref(exist)でチェックしてください。",
				"",
				"なお、ファイルシステムがサポートされないプラットフォームや、対象ファイルが実行ファイルへ埋め込まれたファイルの場合、$ref(exist)でファイルが存在していても削除に失敗することがあります。"
			],
			"relationGroup": [
				"fileIOCommon"
			]
		},
		"dirinfo": {
			"type": "function",
			"summary": "特定のディレクトリパスの取得",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "dirType",
					"description": "取得するディレクトリのタイプ"
				}
			],
			"description": [
				"dirTypeに従って特定のディレクトリパスを取得します。",
				"dirTypeに指定できる値は次の表の通りです。$",
				"$",
				"|dirType|内容|マクロ|備考|$",
				"|:--|:--|:--|:--|$",
				"|0|カレントディレクトリ|$ref(dir_cur)||$",
				"|1|実行ファイルのディレクトリ|$ref(dir_exe)||$",
				"$",
				""
			],
			"relationGroup": [
				"fileIOCommon"
			]
		},
		"dirlist": {
			"type": "function",
			"summary": "ファイル一覧の取得",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "var",
					"description": "ファイル一覧を格納する変数"
				},
				{
					"name": "filemask",
					"description": "取得するファイル名のマスク"
				},
				{
					"name": "mode",
					"description": "取得するモード",
					"omitted": "0"
				}
			],
			"description": [
				"現在のディレクトリのファイル一覧を取得し、varへ格納します。",
				"filemaskは`*.*`のように、ワイルドカードを使ったファイル名の指定が可能です。",
				"",
				"modeに指定できる値は次の表の通りです。$",
				"$",
				"|mode|内容|備考|$",
				"|:--|:--|:--|:--|$",
				"|0|全てのファイル||$",
				"|1|ディレクトリを除く全てのファイル||$",
				"|2|隠しファイル、システムファイルを除く全てのファイル||$",
				"|3|ディレクトリ、隠しファイル、システムファイルを除く全てのファイル||$",
				"|5|ディレクトリのみ||$",
				"|6|隠しファイル、システムファイルのみ||$",
				"|7|ディレクトリ、隠しファイル、システムファイルのみ||$",
				"$",
				"※modeはビット毎に内部動作を切り替えており、その処理は次の表のようになります。$",
				"$",
				"|modeビット値|内容|$",
				"|:--|:--|$",
				"|1|ディレクトリを対象にする|$",
				"|2|隠しファイル、システムファイルを対象にする|$",
				"|4|対象にする・しないを反転させる|$",
				"$",
				"なお、プラットフォームによっては隠しファイルや、システムファイルといった属性がサポートされていない可能性があることに注意してください。"
			],
			"relationGroup": [
				"fileIOCommon"
			]
		},
		"chdir": {
			"type": "function",
			"summary": "カレントディレクトリの変更",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "dirPath",
					"description": "カレントディレクトリに設定するディレクトリパス"
				}
			],
			"description": [
				"カレントディレクトリをdirPathに変更します。",
				"カレントディレクトリの変更に失敗した場合エラーとなります。",
				"",
				"なお、ファイルシステムがサポートされないプラットフォームの場合（HTMLなど）、ディレクトリが存在していてもこの命令に失敗することがあります。"
			],
			"relationGroup": [
				"fileIOCommon"
			]
		},
		"mkdir": {
			"type": "function",
			"summary": "ディレクトリの作成",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "dirPath",
					"description": "作成するディレクトリパス"
				}
			],
			"description": [
				"dirPathで指定したパスのディレクトリを作成します。",
				"",
				"なお、ファイルシステムがサポートされないプラットフォームの場合（HTMLなど）、この命令に失敗することがあります。"
			],
			"relationGroup": [
				"fileIOCommon"
			]
		},
		"dir_cur": {
			"type": "macro",
			"summary": "カレントディレクトリを表すマクロ",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"カレントディレクトリを表すマクロです。",
				"内容は`dirinfo(0)`と同値です、"
			],
			"relationGroup": [
				"macroCommon"
			]
		},
		"dir_exe": {
			"type": "macro",
			"summary": "実行ファイルディレクトリを表すマクロ",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"実行ファイルディレクトリを表すマクロです。",
				"内容は`dirinfo(0)`と同値です、"
			],
			"relationGroup": [
				"macroCommon"
			]
		},

		"notesel": {
			"type": "function",
			"summary": "noteの対象変数指定",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "var",
					"description": "noteの操作対象にする変数"
				}
			],
			"description": [
				"varを以降のnote系命令の操作対象とします。",
				"",
				"この命令実行時、varを文字列型でない場合文字列型に初期化します。"
			],
			"relationGroup": [
				"noteCommon"
			]
		},
		"noteunsel": {
			"type": "function",
			"summary": "noteの対象変数クリア",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"note系命令の操作対象の変数をクリアします。",
				"※HSP3と動作に互換性がないことに注意してください。"
			],
			"relationGroup": [
				"noteCommon"
			]
		},
		"noteadd": {
			"type": "function",
			"summary": "noteへ行を追加",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "line",
					"description": "行として追加する文字列"
				},
				{
					"name": "lineIndex",
					"description": "追加する行のインデックス",
					"omitted": "-1"
				},
				{
					"name": "insertMode",
					"description": "追加モード（0＝追加、1＝上書き）",
					"omitted": "0"
				}
			],
			"description": [
				"noteへlineを新しく行を追加します。",
				"",
				"lineIndexの行へ新しく追加しますが、lineIndexが負の場合は最後尾に行が追加されます。",
				"lineIndexに対応する行が存在しない場合、行を追加せずに処理を終えます。",
				"",
				"insertModeを`1`にすることで追加ではなくその行を上書きすることができます。",
				"ただし、lineIndexが負の場合は行の上書きではなく、最終行の追加と同じ意味になります。"
			],
			"relationGroup": [
				"noteCommon"
			]
		},
		"notedel": {
			"type": "function",
			"summary": "noteから行を削除",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "lineIndex",
					"description": "削除する行のインデックス",
					"omitted": "0"
				}
			],
			"description": [
				"noteからlineIndexで指定した行を削除します。",
				"",
				"lineIndexに対応する行が存在しない場合、エラーにはならず行を削除せずに処理を返します。"
			],
			"relationGroup": [
				"noteCommon"
			]
		},
		"noteget": {
			"type": "function",
			"summary": "noteから行を取得",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "toVariable",
					"description": "行の内容を格納する変数"
				},
				{
					"name": "lineIndex",
					"description": "取得する行のインデックス",
					"omitted": "0"
				}
			],
			"description": [
				"noteからlineIndexで指定した行の内容をtoVariableへ取得・格納します。",
				"",
				"lineIndexに対応する行が存在しない場合、エラーにはならず空文字を格納します。"
			],
			"relationGroup": [
				"noteCommon"
			]
		},
		"noteload": {
			"type": "function",
			"summary": "noteへファイルの内容を読み込む",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "filePath",
					"description": "読み込むファイルパス"
				},
				{
					"name": "readSize",
					"description": "読み込むサイズ",
					"omitted": "-1"
				}
			],
			"description": [
				"filePathのファイルの内容をテキストとしてnoteへ読み込みます。",
				"",
				"readSizeで読み込むサイズを指定できます。",
				"readSizeが負の場合、ファイルの内容全体が読み込まれます。"
			],
			"relationGroup": [
				"noteCommon"
			]
		},
		"notesave": {
			"type": "function",
			"summary": "noteの内容をファイルへ書き込む",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "filePath",
					"description": "書き込むファイルパス"
				}
			],
			"description": [
				"noteの内容をテキストとしてfilePathのファイルへ書き込みます。"
			],
			"relationGroup": [
				"noteCommon"
			]
		},

		"assert": {
			"type": "function",
			"summary": "アサーション",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "expression",
					"description": "検証する条件式"
				}
			],
			"description": [
				"expressionの条件式が成立しない時（intとして評価すると0の時）にアサーション失敗とします。",
				"",
				"アサーション失敗時、デバッグランタイムでは下記の挙動になります。$",
				"$",
				"- デバッガーに繋がっている場合はブレーク（pauseブレーク）します$",
				"- そうでない場合はエラーになります$",
				"$",
				"デバッグランタイムでない（デバッグ機能が有効でない）場合、この命令は無視されます。",
				"ただし、命令として何も処理しないだけで、引数の処理は行われる点には注意してください。"
			],
			"relationGroup": [
				"diagnosticCommon"
			]
		},
		"logmes": {
			"type": "function",
			"summary": "デバッグメッセージ",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "message",
					"description": "デバッグログとして出力する文字列"
				}
			],
			"description": [
				"デバッグログとしてメッセージを出力します。",
				"デバッガーに繋がっている場合、デバッガー側にメッセージが送信されます。（stdout相当）",
				"",
				"デバッグランタイムでない（デバッグ機能が有効でない）場合、この命令は無視されます。",
				"ただし、命令として何も処理しないだけで、引数の処理は行われる点には注意してください。"
			],
			"relationGroup": [
				"diagnosticCommon"
			]
		},

		"newmod": {
			"type": "function",
			"summary": "モジュール型変数の生成",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "var",
					"description": "代入先の変数"
				},
				{
					"name": "module",
					"description": "モジュール"
				},
				{
					"name": "args...",
					"description": "コンストラクタに渡すパラメータ"
				}
			],
			"description": [
				"moduleで指定したモジュールのインスタンスを生成し、varに代入します。",
				"そのため、varはモジュール変数型に自動的に初期化されます。",
				"もしvarがモジュール変数型だった場合、生成したインスタンスを新たに配列に追加または使用してないインデックスへ代入します。",
				"戻り値としてvarへ代入したインデックスを返します。",
				"",
				"モジュール変数の使い方の詳細については$ref(#module)を参照してください。"
			],
			"relationGroup": [
				"moduleCommon"
			]
		},
		"delmod": {
			"type": "function",
			"summary": "モジュール型変数の破棄",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "var",
					"description": "破棄するモジュール型変数"
				}
			],
			"description": [
				"varで指定したモジュール型変数を破棄します。",
				"もし破棄するモジュールが$ref(#modterm)によりデストラクタが定義されていた場合、自動的にデストラクタが呼び出されます。",
				"",
				"モジュール変数の使い方の詳細については$ref(#module)を参照してください。"
			],
			"relationGroup": [
				"moduleCommon"
			]
		},

		"gettime": {
			"type": "function",
			"summary": "現在時刻の取得",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "mode",
					"description": "取得するモード"
				}
			],
			"description": [
				"modeによって指定されたモードに応じて現在時刻を値として返します。",
				"modeの値によって取得できる内容は次の表の通りです。$",
				"$",
				"|mode|マクロ|取得する内容|$",
				"|:--|:--|:--|$",
				"|0|-|年（2020など）|$",
				"|1|-|月（[1, 12]）|$",
				"|2|-|曜日（[0, 6]で0が日曜、6が土曜）|$",
				"|3|-|日（[1, 31]）|$",
				"|4|-|時（[0, 23]）|$",
				"|5|-|分（[0, 59]）|$",
				"|6|-|秒（[0, 59]）|$",
				"|7|-|ミリ秒<br>プラットフォームによってはサポートされない場合があり、その場合は`0`|$",
				"|-|$ref(gettime_localtime@n2)|LocalTime<br>UnixTimeにローカル時刻のUTCオフセット[秒]を加算した数値です。<br>この値は実数として返され、小数点以下の値はミリ秒を保持します。|$",
				"|-|$ref(gettime_unixtime@n2)|UnixTime<br>この値は実数として返され、小数点以下の値はミリ秒を保持します。|$",
				"|-|$ref(gettime_utcoffset@n2)|UTCとローカル時刻の差[秒]|$",
				"$",
				"表に書かれている以外の値をmodeとして渡した場合、0が返ります。"
			],
			"relationGroup": [
				"timeCommon"
			]
		},
		"exttime@n2": {
			"type": "function",
			"summary": "指定した時刻の取得",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "mode",
					"description": "取得するモード"
				},
				{
					"name": "time",
					"description": "時刻"
				},
				{
					"name": "timeMode",
					"description": "時刻の値",
					"omitted": "timemode_localtime@n2"
				}
			],
			"description": [
				"modeによって指定されたモードに応じてtimeによって指定した時刻を値として返します。",
				"modeの値によって取得できる内容は$ref(gettime)と同じなので、そちらを参照してください。",
				"",
				"timeとして渡す値はtimeModeで指定した尺度の値になります。",
				"timeModeで指定できる値は次の通りです。$",
				"$",
				"|timeMode|内容|$",
				"|:--|:--|$",
				"|$ref(timemode_localtime@n2)|LocalTime<br>UnixTimeにローカル時刻のUTCオフセット[秒]を加算したもの。|$",
				"|$ref(timemode_unixtime@n2)|UnixTime|$",
				"$",
				"※この関数によって得られる日付は、ローカル時刻で計算した日付になります。",
				"そのため、正確に渡した時刻をUnixTimeと評価したい場合、timeにUnixTimeを渡してtimeModeをtimemode_localtime@n2とすればその時刻をタイムゾーンを無視して評価できます。"
			],
			"relationGroup": [
				"timeCommon"
			]
		},
		"gettime_localtime@n2": {
			"type": "constant",
			"summary": "LocalTime取得モード",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"$ref(gettime)や$ref(exttime@n2)における取得する値（LocalTime）を示す整数の定数です。"
			],
			"relationGroup": [
				"timeConstantCommon"
			]
		},
		"gettime_unixtime@n2": {
			"type": "constant",
			"summary": "UnixTime取得モード",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"$ref(gettime)や$ref(exttime@n2)における取得する値（UnixTime）を示す整数の定数です。"
			],
			"relationGroup": [
				"timeConstantCommon"
			]
		},
		"gettime_utcoffset@n2": {
			"type": "constant",
			"summary": "UTC Offsetモード",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"$ref(gettime)や$ref(exttime@n2)における取得する値（UTC Offset）を示す整数の定数です。"
			],
			"relationGroup": [
				"timeConstantCommon"
			]
		},
		"timemode_localtime@n2": {
			"type": "constant",
			"summary": "LocalTimeモード",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"$ref(exttime@n2)における時刻指定モード（LocalTime）を示す整数の定数です。"
			],
			"relationGroup": [
				"timeConstantCommon"
			]
		},
		"timemode_unixtime@n2": {
			"type": "constant",
			"summary": "UnixTimeモード",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"$ref(exttime@n2)における時刻指定モード（UnixTime）を示す整数の定数です。"
			],
			"relationGroup": [
				"timeConstantCommon"
			]
		},

		"bload": {
			"type": "function",
			"summary": "バイナリファイルの読み込み",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "filePath",
					"description": "読み込むファイルパス"
				},
				{
					"name": "var",
					"description": "読み込む先の変数"
				},
				{
					"name": "readSize",
					"description": "読み込むサイズ[byte]",
					"omitted": "-1"
				},
				{
					"name": "readOffset",
					"description": "読み込むオフセット[byte]",
					"omitted": "-1"
				}
			],
			"description": [
				"filePathで指定したファイルの内容を、バイナリとしてvarへ読み込みます。",
				"",
				"読み込み先の変数は文字列型である必要があります。",
				"指定した変数が配列の要素ではない場合、文字列型ではなかったら自動的に文字列型に初期化されます。",
				"読み込んだ内容のバイトサイズは$ref(strsize)へ格納されます。",
				"つまり、この命令が成功した場合、読み込み先のvarは文字列型で、その文字列のサイズは$ref(strsize)以上になります。",
				"",
				"readSizeが負の場合、ファイルの内容が全て読み込まれます。",
				"readOffsetが 0 以下の場合、ファイルの内容を先頭から読み込みます。",
				"readOffset が 0 超過の場合、その位置からファイルの内容を読み込みます。"
			],
			"relationGroup": [
				"fileIOCommon"
			]
		},
		"bsave": {
			"type": "function",
			"summary": "バイナリファイルの書き込み",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "filePath",
					"description": "書き込むファイルパス"
				},
				{
					"name": "var",
					"description": "書き込む変数"
				},
				{
					"name": "writeSize",
					"description": "書き込むサイズ",
					"omitted": "-1"
				},
				{
					"name": "writeOffset",
					"description": "書き込むオフセット",
					"omitted": "-1"
				}
			],
			"description": [
				"filePathで指定したファイルに、varの内容をバイナリとして書き込みます。",
				"",
				"writeSizeが負の場合、変数の内容全てが書き出されます。",
				"writeOffsetが負の場合、ファイルの内容を全て上書きします。",
				"writeOffset が 0 以上の値の場合、その位置からファイルの内容を上書きします。"
			],
			"relationGroup": [
				"fileIOCommon"
			]
		},
		"bcopy": {
			"type": "function",
			"summary": "バイナリファイルのコピー",
			"group": ["basics"],
			"tag": [],
			"parameters": [
				{
					"name": "srcFilePath",
					"description": "コピー元ファイルパス"
				},
				{
					"name": "dstFilePath",
					"description": "コピー先ファイルパス"
				}
			],
			"description": [
				"srcFilePathで指定したファイルを、dstFilePathにコピーします。"
			],
			"relationGroup": [
				"fileIOCommon"
			]
		},

		"thismod": {
			"type": "lexicalVariable",
			"summary": "現スコープのモジュール変数",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"現在のスコープにおけるモジュール変数を表します。",
				"",
				"$ref(#modfunc)や$ref(#modcfunc)で定義された関数はモジュール変数に対して実行しますが、この実行の対象となっているモジュール変数を関数内から参照する際に使用できます。"
			],
			"relationGroup": [
				"systemVariableCommon"
			]
		},

		"hspver": {
			"type": "systemVariable",
			"summary": "HSPのバージョン値",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"参考元のHSPのバージョン値を表します。",
				"これはHSP3の互換性のために用意されたシステム変数で、HSP3.6以降の値（`0x3600`より大きい値）になっています。"
			],
			"relationGroup": [
				"systemVariableCommon"
			]
		},
		"cnt": {
			"type": "systemVariable",
			"summary": "repeat-loopのカウンター",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"repeat-loop内の現在のループ数を表す整数値のシステム変数です。",
				"ネストされたrepeat-loop内では、一番内側のループ数を表すシステム変数となり、外側のループ数はシステム変数を通しては参照できないので注意してください。"
			],
			"relationGroup": [
				"systemVariableCommon"
			]
		},
		"stat": {
			"type": "systemVariable",
			"summary": "整数ステータス値",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"各命令をコマンド形式での戻り値、及び$ref(gosub)によるサブルーチン実行の戻り値の、最後の整数値を保持するシステム変数です。"
			],
			"relationGroup": [
				"systemVariableCommon"
			]
		},
		"refdval": {
			"type": "systemVariable",
			"summary": "実数ステータス値",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"各命令をコマンド形式での戻り値、及びgosubによるサブルーチン実行の戻り値の、最後の実数値を保持するシステム変数です。"
			],
			"relationGroup": [
				"systemVariableCommon"
			]
		},
		"refstr": {
			"type": "systemVariable",
			"summary": "文字列ステータス値",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"各命令をコマンド形式での戻り値、及びgosubによるサブルーチン実行の戻り値の、最後の文字列を保持するシステム変数です。"
			],
			"relationGroup": [
				"systemVariableCommon"
			]
		},
		"strsize": {
			"type": "systemVariable",
			"summary": "特定の整数ステータス値",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"一部の命令時に自動で書き変わる整数値のシステム変数です。"
			],
			"relationGroup": [
				"systemVariableCommon"
			]
		},
		"looplev": {
			"type": "systemVariable",
			"summary": "repeat-loopのネストレベル",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"現在のスコープにおけるrepeat-loopのネストレベル（入れ子の深さ）を表すシステム変数です。",
				"なお、foreach-loopのネストも含まれます。"
			],
			"relationGroup": [
				"systemVariableCommon"
			]
		},
		"sublev": {
			"type": "systemVariable",
			"summary": "関数・サブルーチンのネストレベル",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"現在のスコープにおける関数呼び出し、サブルーチンのネストレベル（入れ子の深さ）を表すシステム変数です。"
			],
			"relationGroup": [
				"systemVariableCommon"
			]
		},

		"sysreq@n2": {
			"type": "function",
			"summary": "システム情報の取得・設定",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "requestType",
					"description": "参照する情報の種類",
					"omitted": "0"
				},
				{
					"name": "[setVal]",
					"description": "（設定時）設定する値"
				}
			],
			"description": [
				"システム情報の取得・設定を行います。",
				"この命令は引数の数によって挙動が変化します。",
				"",
				"引数が 1 つだけの場合、requestTypeに該当する情報を返します。",
				"引数が 2 つ以上の場合、requestTypeに該当する情報を設定します。",
				"設定できない情報を設定しようとした場合エラーになります。",
				"",
				"requestType の値と取得・設定の可否については次の表の通りです。$",
				"$",
				"|requestType|型|取得|設定|内容|$",
				"|:--|:--|:--|:--|:--|$",
				"|`sysreq_platform@n2`|`int`|〇|×|現在のプラットフォーム。<br>プラットフォームを表す値は後述。|$",
				"|`sysreq_cpu_core_count@n2`|`int`|〇|×|CPUのコア数。|$",
				"|`sysreq_cpu_cache_line_size@n2`|`int`|〇|×|CPUのキャッシュラインサイズ。|$",
				"|`sysreq_system_ram_mb@n2`|`int`|〇|×|システムのメモリ量[MB]。|$",
				"|`sysreq_battery_seconds@n2`|`int`|〇|×|バッテリーの残り時間[sec]。バッテリーが存在しない場合は`-1`。|$",
				"|`sysreq_battery_percentage@n2`|`int`|〇|×|バッテリーの残りパーセンテージ[%]。バッテリーが存在しない場合は`-1`。|$",
				"|`sysreq_font_atlas_width@n2`<br>`sysreq_font_atlas_height@n2`|`int`|〇|〇|$ref(fontload@n2)命令で生成するフォントのアトラステクスチャのサイズ|$",
				"$",
				"プラットフォームを表す定数は次の通りです。$",
				"$",
				"|platform|マクロ|$",
				"|:--|:--|$",
				"|Windows|`platform_windows`|$",
				"|iOS|`platform_ios`|$",
				"|Android|`platform_android`|$",
				"|HTML|`platform_webgl`|$",
				"|Unix/Linux|`platform_linux`|$",
				"|RaspberryPi|`platform_raspbia`|$",
				"$",
				""
			],
			"relationGroup": [
				"stdSystemCommon"
			]
		},
		"sysreq_platform@n2": {
			"type": "constant",
			"summary": "プラットフォームリクエスト",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"$ref(sysreq@n2)におけるリクエストの種類（プラットフォーム）を示す整数の定数です。"
			],
			"relationGroup": [
				"stdConstantSysreq"
			]
		},
		"sysreq_cpu_core_count@n2": {
			"type": "constant",
			"summary": "CPUコア数リクエスト",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"$ref(sysreq@n2)におけるリクエストの種類（CPUのコア数）を示す整数の定数です。"
			],
			"relationGroup": [
				"stdConstantSysreq"
			]
		},
		"sysreq_cpu_cache_line_size@n2": {
			"type": "constant",
			"summary": "CPUキャッシュラインサイズリクエスト",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"$ref(sysreq@n2)におけるリクエストの種類（CPUキャッシュラインサイズ）を示す整数の定数です。"
			],
			"relationGroup": [
				"stdConstantSysreq"
			]
		},
		"sysreq_system_ram_mb@n2": {
			"type": "constant",
			"summary": "システムメモリリクエスト",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"$ref(sysreq@n2)におけるリクエストの種類（システムメモリ）を示す整数の定数です。"
			],
			"relationGroup": [
				"stdConstantSysreq"
			]
		},
		"sysreq_battery_seconds@n2": {
			"type": "constant",
			"summary": "バッテリー残時間リクエスト",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"$ref(sysreq@n2)におけるリクエストの種類（バッテリー残時間）を示す整数の定数です。"
			],
			"relationGroup": [
				"stdConstantSysreq"
			]
		},
		"sysreq_battery_percentage@n2": {
			"type": "constant",
			"summary": "バッテリー残量リクエスト",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"$ref(sysreq@n2)におけるリクエストの種類（バッテリー残量）を示す整数の定数です。"
			],
			"relationGroup": [
				"stdConstantSysreq"
			]
		},
		"sysreq_font_atlas_width@n2": {
			"type": "constant",
			"summary": "フォントアトラステクスチャリクエスト",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"$ref(sysreq@n2)におけるリクエストの種類（フォントアトラステクスチャの幅）を示す整数の定数です。"
			],
			"relationGroup": [
				"stdConstantSysreq"
			]
		},
		"sysreq_font_atlas_height@n2": {
			"type": "constant",
			"summary": "フォントアトラステクスチャリクエスト",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"$ref(sysreq@n2)におけるリクエストの種類（フォントアトラステクスチャの高さ）を示す整数の定数です。"
			],
			"relationGroup": [
				"stdConstantSysreq"
			]
		},

		"platform_windows": {
			"type": "constant",
			"summary": "Windowsプラットフォームを表す定数",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"Windowsのプラットフォームを示す整数の定数です。"
			],
			"relationGroup": [
				"stdConstantPlatform"
			]
		},
		"platform_ios": {
			"type": "constant",
			"summary": "iOSプラットフォームを表す定数",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"iOSのプラットフォームを示す整数の定数です。"
			],
			"relationGroup": [
				"stdConstantPlatform"
			]
		},
		"platform_android": {
			"type": "constant",
			"summary": "Androidプラットフォームを表す定数",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"Androidのプラットフォームを示す整数の定数です。"
			],
			"relationGroup": [
				"stdConstantPlatform"
			]
		},
		"platform_webgl": {
			"type": "constant",
			"summary": "HTMLプラットフォームを表す定数",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"HTMLのプラットフォームを示す整数の定数です。"
			],
			"relationGroup": [
				"stdConstantPlatform"
			]
		},
		"platform_linux": {
			"type": "constant",
			"summary": "Unix/Linuxプラットフォームを表す定数",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"Unix/Linuxのプラットフォームを示す整数の定数です。"
			],
			"relationGroup": [
				"stdConstantPlatform"
			]
		},
		"platform_raspbi": {
			"type": "constant",
			"summary": "RaspberryPiプラットフォームを表す定数",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"RaspberryPiのプラットフォームを示す整数の定数です。"
			],
			"relationGroup": [
				"stdConstantPlatform"
			]
		},

		"gsel": {
			"type": "function",
			"summary": "操作先ウィンドウの変更",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "screenID",
					"description": "設定する操作先ウィンドウID",
					"omitted": "0"
				},
				{
					"name": "mode",
					"description": "ウィンドウ状態変更モード",
					"omitted": "0"
				}
			],
			"description": [
				"現在の操作先ウィンドウをscreenIDのウィンドウに変更します。",
				"",
				"modeによって更に変更後のウィンドウの表示状態などを設定することができます。$",
				"$",
				"|mode|内容|$",
				"|:--|:--|$",
				"|-1|ウィンドウを非表示にします|$",
				"|0|特に追加の処理をしません|$",
				"|1|ウィンドウを表示状態にし、アクティブにします（最前面設定は解除します）|$",
				"|2|ウィンドウを表示状態にし、アクティブにした後、最前面ウィンドウに設定します|$"
			],
			"relationGroup": [
				"stdDrawCommon"
			]
		},
		"pos": {
			"type": "function",
			"summary": "カレントポジションの設定",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "x",
					"description": "設定するX座標"
				},
				{
					"name": "y",
					"description": "設定するY座標"
				}
			],
			"description": [
				"現在の操作先ウィンドウのカレントポジションを設定します。",
				"",
				"それぞれの引数を省略した場合、現在の値が保持されます。",
				"そのため、例えばY座標だけ設定したい場合は`pos , y`といった記述が可能です。",
				"",
				"カレントポジションは$ref(mes)などのメッセージ表示や、$ref(button)などのウィジェット配置時の起点として使われます。",
				"座標系については$ref(screen)を参照してください。"
			],
			"relationGroup": [
				"stdDrawCommon"
			]
		},
		"color": {
			"type": "function",
			"summary": "カレントカラーの設定",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "r",
					"description": "設定するR輝度",
					"omitted": "0",
					"limit": "[0, 255]"
				},
				{
					"name": "g",
					"description": "設定するG輝度",
					"omitted": "0",
					"limit": "[0, 255]"
				},
				{
					"name": "b",
					"description": "設定するB輝度",
					"omitted": "0",
					"limit": "[0, 255]"
				}
			],
			"description": [
				"現在の操作先ウィンドウのカレントカラーを設定します。",
				"",
				"カレントカラーは$ref(mes)などのメッセージ表示でのテキスト色として使われます。"
			],
			"relationGroup": [
				"stdDrawCommon"
			]
		},
		"rgbcolor": {
			"type": "function",
			"summary": "カレントカラーの設定",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "rgb",
					"description": "設定するRGB輝度",
					"omitted": "0",
					"limit": "[0, 255^3]"
				}
			],
			"description": [
				"現在の操作先ウィンドウのカレントカラーを設定します。",
				"",
				"rgbはRGB輝度それぞれの値を含んだ値で、上位バイトから順にR輝度、G輝度、B輝度として設定されます。",
				"つまり`0x112233`は、R輝度として`0x11`、G輝度として`0x22`、B輝度として`0x33`が設定されます。",
				"これによりHTMLなどでのカラー表記と比較的互換性の高い記述が可能になります。"
			],
			"relationGroup": [
				"stdDrawCommon"
			]
		},
		"hsvcolor": {
			"type": "function",
			"summary": "HSVによるカレントカラーの設定",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "h",
					"description": "設定するH（色相）",
					"omitted": "0",
					"limit": "[0, 191]"
				},
				{
					"name": "s",
					"description": "設定するS（彩度）",
					"omitted": "0",
					"limit": "[0, 255]"
				},
				{
					"name": "v",
					"description": "設定するv（輝度）",
					"omitted": "0",
					"limit": "[0, 255]"
				}
			],
			"description": [
				"現在の操作先ウィンドウのカレントカラーをHSVによって設定します。",
				"",
				"色相hは値域が`[0, 191]`であることに注意してください。",
				"これ以外の範囲の場合この範囲に収まるように剰余がとられます。",
				"",
				"一方、sとvは値域が`[0, 255]`で、この範囲外の値はこの範囲になるようにクランプされます。"
			],
			"relationGroup": [
				"stdDrawCommon"
			]
		},
		"objcolor": {
			"type": "function",
			"summary": "カレントオブジェクトカラーの設定",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "r",
					"description": "設定するR輝度",
					"omitted": "0",
					"limit": "[0, 255]"
				},
				{
					"name": "g",
					"description": "設定するG輝度",
					"omitted": "0",
					"limit": "[0, 255]"
				},
				{
					"name": "b",
					"description": "設定するB輝度",
					"omitted": "0",
					"limit": "[0, 255]"
				}
			],
			"description": [
				"現在の操作先ウィンドウのカレントオブジェクトカラーを設定します。",
				"",
				"カレントオブジェクトカラーは$ref(mes)などのメッセージ表示でのドロップシャドウテキスト色として使われます。",
				"※本来は$ref(button)などのウィジェットのカラーを設定するものですが、未対応です。"
			],
			"relationGroup": [
				"stdDrawCommon"
			]
		},
		"gmode": {
			"type": "function",
			"summary": "描画モードの設定",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "mode",
					"description": "描画モード",
					"omitted": "0",
					"limit": "[0, 6]"
				},
				{
					"name": "copySizeX",
					"description": "コピーするXサイズ",
					"omitted": "32",
					"limit": "0 ～"
				},
				{
					"name": "copySizeY",
					"description": "コピーするYサイズ",
					"omitted": "32",
					"limit": "0 ～"
				},
				{
					"name": "blendAlpha",
					"description": "ブレンド時のアルファ値",
					"omitted": "0",
					"limit": "[0, 255]"
				}
			],
			"description": [
				"現在の操作先ウィンドウの描画モードを設定します。",
				"",
				"描画モードmodeの内容については次の表の通りです。$",
				"$",
				"|mode|内容|マクロ|$",
				"|:--|:--|:--|$",
				"|0|ブレンドを行わず、色情報をそのままコピーします。|gmode_gdi|$",
				"|1|ブレンドを行わず、色情報をそのままコピーします。<br>HSP3との互換性の為に用意されたもので、0と意味は変わりません|gmode_mem|$",
				"|2|ブレンドを行わず、色情報をそのままコピーしますが、コピー元のカラーRGB輝度が`(0, 0, 0)`のピクセルはコピーされません。|gmode_rgb0|$",
				"|3|アルファブレンディングが行われます。<br>コピー元のカラーが`blendAlpha`で指定したアルファ値を乗算して描画先にブレンドされます。|gmode_alpha|$",
				"|4|アルファブレンディングが行われますが、コピー元のカラーRGB輝度がカレントカラーのピクセルはコピーされません。<br>モード3の処理に加えて、特定カラーの透過を行うモードです。|gmode_rgb0alpha|$",
				"|5|加算ブレンディングが行われます。|gmode_add|$",
				"|6|減算ブレンディングが行われます。|gmode_sub|$",
				"|7|非互換ながらサポートされます。<br>右半分のRチャンネルをアルファ値として使用します。<br>HSP3本家とは違い、各チャンネル毎に異なるアルファ値でブレンドする結果とは異なることに注意してください。|gmode_pixela|$",
				"$",
				"copySizeXとcopySizeYは現在の操作先ウィンドウのカレントコピーサイズとして設定されます。",
				"カレントコピーサイズは画面コピー描画命令である$ref(gcopy)や$ref(gzoom)、$ref(grotate)といった命令で参照されます。",
				"詳細はそれらの命令を参照してください。",
				"",
				"ブレンド時のアルファ値blendAlphaは値域が`[0, 255]`であり、HSP3と互換性がないことに注意してください。",
				"これ以外の範囲の場合この範囲に収まるようにクランプされます。"
			],
			"relationGroup": [
				"stdDrawCommon"
			]
		},
		"gmode_gdi": {
			"type": "constant",
			"summary": "gmodeのオプション",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"$ref(gmode)におけるオプションを示す整数の定数です。"
			],
			"relationGroup": [
				"stdConstantGmode"
			]
		},
		"gmode_mem": {
			"type": "constant",
			"summary": "gmodeのオプション",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"$ref(gmode)におけるオプションを示す整数の定数です。"
			],
			"relationGroup": [
				"stdConstantGmode"
			]
		},
		"gmode_rgb0": {
			"type": "constant",
			"summary": "gmodeのオプション",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"$ref(gmode)におけるオプションを示す整数の定数です。"
			],
			"relationGroup": [
				"stdConstantGmode"
			]
		},
		"gmode_alpha": {
			"type": "constant",
			"summary": "gmodeのオプション",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"$ref(gmode)におけるオプションを示す整数の定数です。"
			],
			"relationGroup": [
				"stdConstantGmode"
			]
		},
		"gmode_rgb0alpha": {
			"type": "constant",
			"summary": "gmodeのオプション",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"$ref(gmode)におけるオプションを示す整数の定数です。"
			],
			"relationGroup": [
				"stdConstantGmode"
			]
		},
		"gmode_add": {
			"type": "constant",
			"summary": "gmodeのオプション",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"$ref(gmode)におけるオプションを示す整数の定数です。"
			],
			"relationGroup": [
				"stdConstantGmode"
			]
		},
		"gmode_sub": {
			"type": "constant",
			"summary": "gmodeのオプション",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"$ref(gmode)におけるオプションを示す整数の定数です。"
			],
			"relationGroup": [
				"stdConstantGmode"
			]
		},
		"gmode_pixela": {
			"type": "constant",
			"summary": "gmodeのオプション",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"$ref(gmode)におけるオプションを示す整数の定数です。"
			],
			"relationGroup": [
				"stdConstantGmode"
			]
		},
		"gmulcolor": {
			"type": "function",
			"summary": "描画乗算カラーの設定",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "mulR",
					"description": "R乗算輝度",
					"omitted": "255",
					"limit": "[0, 255]"
				},
				{
					"name": "mulG",
					"description": "G乗算輝度",
					"omitted": "255",
					"limit": "[0, 255]"
				},
				{
					"name": "mulB",
					"description": "B乗算輝度",
					"omitted": "255",
					"limit": "[0, 255]"
				}
			],
			"description": [
				"現在の操作先ウィンドウの描画乗算カラーを設定します。",
				"",
				"これらの乗算カラーは$ref(gcopy)、$ref(gzoom)、$ref(grotate)などの画像コピー命令で参照されます。",
				"それ以外の$ref(boxf)など図形描画命令では使用されません。"
			],
			"relationGroup": [
				"stdDrawCommon"
			]
		},
		"redraw": {
			"type": "function",
			"summary": "ウィンドウの再描画設定",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "mode",
					"description": "再描画モード",
					"omitted": "1",
					"limit": "[0, 3]"
				},
				{
					"name": "[dummyX]",
					"description": "（互換用パラメータ）"
				},
				{
					"name": "[dummyY]",
					"description": "（互換用パラメータ）"
				},
				{
					"name": "[dummyW]",
					"description": "（互換用パラメータ）"
				},
				{
					"name": "[dummyH]",
					"description": "（互換用パラメータ）"
				}
			],
			"description": [
				"現在の操作先ウィンドウの再描画の設定をします。",
				"",
				"modeとして0を設定すると、ウィンドウへの描画が表示に反映されなくなります。",
				"modeとして1を設定すると、ウィンドウへの描画が表示に反映されるようになります。",
				"つまり、大量の描画を行っている最中の画面を表示せず、最終的な画面のみ表示したい場合に使う命令となります。",
				"",
				"互換用パラメータはHSP3との互換性のために用意されたもので、指定する必要はありません。",
				"指定されていても無視されます。",
				"",
				"なお、ウィンドウへの描画が表示に反映されるタイミングは$ref(wait)や$ref(await)などの待機命令時、または本命令のみとなります。"
			],
			"relationGroup": [
				"stdDrawCommon"
			]
		},

		"imgunpack@n2": {
			"type": "function",
			"summary": "画像データの展開",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "toVar",
					"description": "展開先の変数"
				},
				{
					"name": "fromVar",
					"description": "展開元のデータを含む変数"
				},
				{
					"name": "fromDataSize",
					"description": "展開元のデータのサイズ",
					"omitted": "-1"
				},
				{
					"name": "fromDataOffset",
					"description": "展開元のデータのオフセット",
					"omitted": "0"
				}
			],
			"description": [
				"fromVar の変数が持つデータ領域のうち、 fromDataOffset から fromDataSize の範囲を画像データとみなして、toVar へピクセルデータを展開します。",
				"fromDataSize が負の値の場合、fromVar が持つデータ領域のサイズを使います。",
				"fromDataOffset と fromDataSize の合計が fromVar が持つデータ領域のサイズを超過する場合、fromVar が持つデータ領域のサイズ内のデータだけを使います。",
				"fromDataOffset が負の値か、fromVar が持つデータ領域のサイズより大きい場合、エラーになります。",
				"",
				"この命令により、toVar は整数型（int）の 1 次元の配列変数になり、その要素数は展開された画像データのピクセル数と一致します。",
				"展開された画像データの幅はシステム変数$ref(imgunpackw@n2)へ、高さは$ref(imgunpackh@n2)へ格納されます。",
				"toVar の各ピクセルの値はピクセルのARGBを 32 ビットにまとめた値で、`0xaarrggbb` の形式で格納されます。",
				"この格納フォーマットは$ref(celbitmap)の入力として使用できるフォーマットでもあります。",
				"",
				"つまり、$ref(bload)などでファイルから読み込んだ画像のデータを、加工してから$ref(celbitmap)によってウィンドウへ転送することなどが可能です。",
				"ピクセルデータを画像データへ変換するには$ref(imgpack@n2)を使用します。",
				"",
				"展開に失敗した場合 0 を、成功した場合 1 を返します。エラーにはならないことに注意してください。",
				"また、展開に失敗した場合、toVar の整数型への初期化などは行われません。"
			],
			"relationGroup": [
				"stdImageCommon"
			]
		},
		"imgpack@n2": {
			"type": "function",
			"summary": "画像データへの変換",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "toVar",
					"description": "変換先の変数"
				},
				{
					"name": "fromVar",
					"description": "変換元のピクセルデータ"
				},
				{
					"name": "fromImageWidth",
					"description": "変換元のピクセルデータの幅"
				},
				{
					"name": "fromImageHeight",
					"description": "変換元のピクセルデータの高さ"
				},
				{
					"name": "toFileFormat",
					"description": "変換後の画像データフォーマット",
					"omitted": "imgfile_png@n2"
				}
			],
			"description": [
				"fromVar の変数の内容をピクセルデータをみなして、画像データへの変換を行い toVar へ格納します。",
				"ピクセルデータが表す画像の幅を fromImageWidth で、高さを fromImageHeight で指定します。",
				"",
				"ピクセルデータとは画像の1ピクセルのRGBA値を `0xaarrggbb` の形式で格納した値の配列で、そのため fromVar はint型の配列である必要があります。",
				"この配列の形式は$ref(celbitmap)で扱える形式のため、$ref(celbitmap)により読み取ったピクセルデータをこの命令により任意の形式の画像データに変換した後、$ref(bsave)などによりファイルへ保存することができます。",
				"",
				"toFileFormat で変換後の画像データのフォーマットを指定します。",
				"toFileFormat に指定できる値は次の表の通りです。$",
				"$",
				"|値|フォーマット|$",
				"|:--|:--|$",
				"|imgfile_bmp@n2|BMP画像|$",
				"|imgfile_jpg@n2|JPG画像|$",
				"|imgfile_png@n2|PNG画像|$",
				"|imgfile_tga@n2|TGA画像|$",
				"$",
				"これ以外の値を指定した場合、変換は失敗扱いとなります。",
				"",
				"この命令により toVar は変換された画像データを収められるサイズの文字列型へ初期化されます。この変数の次元は 1 で、要素数も 1 になります。",
				"画像データのバイトサイズは $ref(strsize) へ格納されます。",
				"",
				"変換に失敗した場合 0 を、成功した場合 1 を返します。エラーにはならないことに注意してください。",
				"また、変換に失敗した場合、toVar の文字列型への初期化などは行われません。"
			],
			"relationGroup": [
				"stdImageCommon"
			]
		},

		"screen": {
			"type": "function",
			"summary": "ウィンドウの初期化・生成",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "screenID",
					"description": "対象のスクリーンID",
					"limit": "[0, 0]"
				},
				{
					"name": "width",
					"description": "ウィンドウの幅",
					"omitted": "640",
					"limit": "[8, 16384]"
				},
				{
					"name": "height",
					"description": "ウィンドウの高さ",
					"omitted": "480",
					"limit": "[8, 16384]"
				}
			],
			"description": [
				"screenIDで指定したIDのウィンドウを生成・初期化し、操作対象とします。",
				"",
				"初期状態ではIDが0のウィンドウが自動的に初期化され操作対象となっていますが、複数のウィンドウを扱いたい時に使用する命令です。",
				"なお、現在は複数ウィンドウはサポートされていないため、screenIDに0以外を指定するとエラーとなります。",
				"",
				"表示はされないが描画対象のウィンドウを別途生成したい場合は$ref(buffer)命令を使用してください。"
			],
			"relationGroup": [
				"stdWindowCommon"
			]
		},
		"buffer": {
			"type": "function",
			"summary": "仮想ウィンドウの初期化・生成",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "screenID",
					"description": "対象のスクリーンID",
					"limit": "1 ～"
				},
				{
					"name": "width",
					"description": "ウィンドウの幅",
					"omitted": "640",
					"limit": "[8, 16384]"
				},
				{
					"name": "height",
					"description": "ウィンドウの高さ",
					"omitted": "480",
					"limit": "[8, 16384]"
				},
				{
					"name": "[mode]",
					"description": "初期化モード（互換性パラメータ）",
					"omitted": "0"
				}
			],
			"description": [
				"screenIDで指定したIDの仮想ウィンドウを生成・初期化し、操作対象とします。",
				"",
				"$ref(screen)とは違い生成するのは仮想的なウィンドウで、描画対象にはできますが実際に画面に表示できないウィンドウとなります。",
				"",
				"また、modeはHSP3との互換性のために用意されたパラメータで実際には使われません。",
				"（HSP3とは違いbufferで生成したウィンドウは常に描画対象にすることができます。）"
			],
			"relationGroup": [
				"stdWindowCommon"
			]
		},
		"cls": {
			"type": "function",
			"summary": "ウィンドウの初期化",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "mode",
					"description": "初期化モード",
					"omitted": "0"
				}
			],
			"description": [
				"現在の操作先ウィンドウの内容を初期化します。",
				"",
				"具体的には$",
				"$",
				"- 全ウィジェットの消去$",
				"- カラーのクリア$",
				"$",
				"が行われます。",
				"",
				"modeによる初期化時の処理内容は次の表の通りです。$",
				"$",
				"|mode|初期化内容|$",
				"|:--|:--|$",
				"|0|ウィンドウの内容をカラー白`(255, 255, 255, 255)`でクリア。|$",
				"|1|ウィンドウの内容をカラー`(192, 192, 192, 255)`でクリア。|$",
				"|2|ウィンドウの内容をカラー`(128, 128, 128, 255)`でクリア。|$",
				"|3|ウィンドウの内容をカラー`(64, 64, 64, 255)`でクリア。|$",
				"|4|ウィンドウの内容をカラー黒`(0, 0, 0, 0)`でクリア。|$",
				"$"
			],
			"relationGroup": [
				"stdWindowCommon"
			]
		},
		"title": {
			"type": "function",
			"summary": "ウィンドウタイトルを設定",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "title",
					"description": "設定するタイトル"
				}
			],
			"description": [
				"現在の操作先ウィンドウのタイトルを設定します。",
				"仮想ウィンドウのタイトルも設定することはできますが、画面には表示されません。"
			],
			"relationGroup": [
				"stdWindowCommon"
			]
		},
		"dialog": {
			"type": "function",
			"summary": "ダイアログを表示",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "message",
					"description": "ダイアログのメッセージ",
					"omitted": "\"\""
				},
				{
					"name": "mode",
					"description": "ダイアログのモード",
					"omitted": "0"
				},
				{
					"name": "option",
					"description": "ダイアログのタイトルなど",
					"omitted": "\"\""
				}
			],
			"description": [
				"現在の操作先ウィンドウのモーダルダイアログを表示します。",
				"",
				"modeとして設定できる値は次の表の通りです。$",
				"$",
				"|mode|内容|$",
				"|:--|:--|$",
				"|0|情報アイコン＋OKボタン|$",
				"|1|警告アイコン＋OKボタン|$",
				"|2|情報アイコン＋はいボタン＋いいえボタン|$",
				"|3|警告アイコン＋はいボタン＋いいえボタン|$",
				"|16|ファイルを開くダイアログ<br>※未サポート|$",
				"|17|ファイル保存ダイアログ<br>※未サポート|$",
				"|32|カラー選択ダイアログ<br>※未サポート|$",
				"|33|カラー選択ダイアログ<br>※未サポート|$",
				"$",
				"なお、これ以外の値をmodeに指定した場合、エラーにはならずダイアログを表示せずに処理を終えます。",
				"",
				"戻り値として、押されたボタンによって次の値が返されます。$",
				"$",
				"|押されたボタン|戻り値|$",
				"|:--|:--|$",
				"|OKボタン|1|$",
				"|はいボタン|6|$",
				"|いいえボタン|7|$",
				"$",
				""
			],
			"relationGroup": [
				"stdWindowCommon"
			]
		},

		"wait": {
			"type": "function",
			"summary": "実行を一時中断",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "duration",
					"description": "待機する時間[10msec]"
				}
			],
			"description": [
				"drurationで指定した整数 x 10[msec]だけ実行を一時中断します。",
				"また、ウィンドウの表示状態の更新、ウィジェットのイベント処理なども同時に行われます。"
			],
			"relationGroup": [
				"stdTimerCommon"
			]
		},
		"await": {
			"type": "function",
			"summary": "実行を一時中断",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "duration",
					"description": "前回時刻からの差分[msec]",
					"omitted": "0"
				}
			],
			"description": [
				"前回awaitした時間から、drurationで指定した整数[msec]だけ経過するまで実行を一時中断します。",
				"また、ウィンドウの表示状態の更新、ウィジェットのイベント処理なども同時に行われます。",
				"",
				"この命令は$ref(wait)とは違い、前回awaitした時間からの差分が、指定したdurationになるように待機が行われます。",
				"これにより、処理内容に影響されず常に一定時間毎に決まった処理を実行することが可能になります。"
			],
			"relationGroup": [
				"stdTimerCommon"
			]
		},
		"systimer@n2": {
			"type": "function",
			"summary": "システムタイマーの取得",
			"group": ["standard"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"現在のシステムタイマーの値を実数値で取得します。",
				"システムタイマーは数値の絶対値に意味はないですが、単調に増加し値の差はミリ秒と一致します。"
			],
			"relationGroup": [
				"stdTimerCommon"
			]
		},

		"texfilter@n2": {
			"type": "function",
			"summary": "テクスチャフィルタの設定・取得",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "screenID",
					"description": "対象のウィンドウID",
					"omitted": "-1"
				},
				{
					"name": "filter",
					"description": "テクスチャフィルタ",
					"omitted": "-1"
				}
			],
			"description": [
				"screenID のウィンドウのテクスチャフィルタを設定・取得します。",
				"",
				"screenID が負の値の場合、現在の操作先ウィンドウが対象となります。",
				"",
				"filter が負の値の場合、対象のウィンドウの現在のフィルタ設定を返します。",
				"filter を設定する場合、次の表の値を指定してください。$",
				"$",
				"|マクロ|内容|$",
				"|:--|:--|$",
				"|`texfilter_nearest@n2`|ニアレスト補間|$",
				"|`texfilter_bilinear@n2`|バイリニア補間|$",
				"|`texfilter_trilinear@n2`|トライレスト補間|$",
				"$",
				""
			],
			"relationGroup": [
				"stdDrawCommon"
			]
		},
		"texfilter_nearest@n2": {
			"type": "constant",
			"summary": "テクスチャのオプション（ニアレスト補間）",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"$ref(texfilter@n2)におけるフィルタ（ニアレスト補間更）を示す整数の定数です。"
			],
			"relationGroup": [
				"stdDrawCommon"
			]
		},
		"texfilter_bilinear@n2": {
			"type": "constant",
			"summary": "テクスチャのオプション（バイリニア補間）",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"$ref(texfilter@n2)におけるフィルタ（バイリニア補間更）を示す整数の定数です。"
			],
			"relationGroup": [
				"stdDrawCommon"
			]
		},
		"texfilter_trilinear@n2": {
			"type": "constant",
			"summary": "テクスチャのオプション（トライリニア補間）",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"$ref(texfilter@n2)におけるフィルタ（トライリニア補間更）を示す整数の定数です。"
			],
			"relationGroup": [
				"stdDrawCommon"
			]
		},

		"line": {
			"type": "function",
			"summary": "ラインを描画",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "endX",
					"description": "終点X座標"
				},
				{
					"name": "endY",
					"description": "終点Y座標"
				},
				{
					"name": "beginX",
					"description": "始点X座標",
					"omitted": "(カレントポジションX座標)"
				},
				{
					"name": "beginY",
					"description": "始点Y座標",
					"omitted": "(カレントポジションX座標)"
				}
			],
			"description": [
				"現在の操作先ウィンドウに対してラインの描画を行います。",
				"ラインの始点座標であるbeginX、beginYは省略可能で、その場合カレントポジションが使われます。",
				"",
				"この命令後、カレントポジションが`(endX, endY)`に設定されます。",
				"これにより、複雑な線分をline命令を連続して使用することで引数を省略して描画できます。",
				"",
				"描画で使用されるパラメータは次の表の通りです。$",
				"$",
				"|内容|使用される値|$",
				"|:--|:--|$",
				"|色|カレントカラー（$ref(color)等で設定したもの）|$",
				"|描画モード|常にアルファブレンドしない|$",
				"|太さ|1固定|$"
			],
			"relationGroup": [
				"stdDrawPrimitive"
			]
		},
		"boxf": {
			"type": "function",
			"summary": "矩形を描画",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "lefTopX",
					"description": "左上X座標",
					"omitted": "0"
				},
				{
					"name": "leftTopY",
					"description": "左上Y座標",
					"omitted": "0"
				},
				{
					"name": "rightBottomX",
					"description": "右下X座標",
					"omitted": "(ウィンドウ幅)"
				},
				{
					"name": "rightBottomY",
					"description": "右下Y座標",
					"omitted": "(ウィンドウ高さ)"
				}
			],
			"description": [
				"現在の操作先ウィンドウに対して矩形の描画を行います。",
				"全ての引数を省略した場合、ウィンドウ全体を覆う矩形の描画が行われます。",
				"",
				"描画で使用されるパラメータは次の表の通りです。$",
				"$",
				"|内容|使用される値|$",
				"|:--|:--|$",
				"|色|カレントカラー（$ref(color)等で設定したもの）|$",
				"|描画モード|常にアルファブレンドしない|$"
			],
			"relationGroup": [
				"stdDrawPrimitive"
			]
		},
		"gboxf@n2": {
			"type": "function",
			"summary": "矩形を描画",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "lefTopX",
					"description": "左上X座標",
					"omitted": "0"
				},
				{
					"name": "leftTopY",
					"description": "左上Y座標",
					"omitted": "0"
				},
				{
					"name": "rightBottomX",
					"description": "右下X座標",
					"omitted": "(ウィンドウ幅)"
				},
				{
					"name": "rightBottomY",
					"description": "右下Y座標",
					"omitted": "(ウィンドウ高さ)"
				}
			],
			"description": [
				"現在の操作先ウィンドウに対して矩形の描画を行います。",
				"$ref(boxf)の描画モードが適用されるバージョンです。",
				"",
				"描画で使用されるパラメータは次の表の通りです。$",
				"$",
				"|内容|使用される値|$",
				"|:--|:--|$",
				"|色|カレントカラー（$ref(color)等で設定したもの）|$",
				"|描画モード|$ref(gmode)で設定したモード|$"
			],
			"relationGroup": [
				"stdDrawPrimitive"
			]
		},
		"circle": {
			"type": "function",
			"summary": "円を描画",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "lefTopX",
					"description": "左上X座標",
					"omitted": "0"
				},
				{
					"name": "leftTopY",
					"description": "左上Y座標",
					"omitted": "0"
				},
				{
					"name": "rightBottomX",
					"description": "右下X座標",
					"omitted": "(ウィンドウ幅)"
				},
				{
					"name": "rightBottomY",
					"description": "右下Y座標",
					"omitted": "(ウィンドウ高さ)"
				},
				{
					"name": "fill",
					"description": "塗りつぶすか（0で枠線描画、それ以外で塗りつぶし）",
					"omitted": "1"
				}
			],
			"description": [
				"現在の操作先ウィンドウに対して円の描画を行います。",
				"",
				"描画で使用されるパラメータは次の表の通りです。$",
				"$",
				"|内容|使用される値|$",
				"|:--|:--|$",
				"|色|カレントカラー（$ref(color)等で設定したもの）|$",
				"|描画モード|常にアルファブレンドしない|$",
				"|枠線太さ|1固定|$"
			],
			"relationGroup": [
				"stdDrawPrimitive"
			]
		},
		"gcircle@n2": {
			"type": "function",
			"summary": "円を描画",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "lefTopX",
					"description": "左上X座標",
					"omitted": "0"
				},
				{
					"name": "leftTopY",
					"description": "左上Y座標",
					"omitted": "0"
				},
				{
					"name": "rightBottomX",
					"description": "右下X座標",
					"omitted": "(ウィンドウ幅)"
				},
				{
					"name": "rightBottomY",
					"description": "右下Y座標",
					"omitted": "(ウィンドウ高さ)"
				},
				{
					"name": "fill",
					"description": "塗りつぶすか（0で枠線描画、それ以外で塗りつぶし）",
					"omitted": "1"
				}
			],
			"description": [
				"現在の操作先ウィンドウに対して円の描画を行います。",
				"$ref(circle)の描画モードが適用されるバージョンです。",
				"",
				"描画で使用されるパラメータは次の表の通りです。$",
				"$",
				"|内容|使用される値|$",
				"|:--|:--|$",
				"|色|カレントカラー（$ref(color)等で設定したもの）|$",
				"|描画モード|$ref(gmode)で設定したモード|$",
				"|枠線太さ|1固定|$"
			],
			"relationGroup": [
				"stdDrawPrimitive"
			]
		},
		"grect": {
			"type": "function",
			"summary": "矩形を描画",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "centerX",
					"description": "中心X座標",
					"omitted": "0"
				},
				{
					"name": "centerY",
					"description": "中心Y座標",
					"omitted": "0"
				},
				{
					"name": "rad",
					"description": "回転角度[rad]",
					"omitted": "0"
				},
				{
					"name": "sizeX",
					"description": "矩形サイズX"
				},
				{
					"name": "sizeY",
					"description": "矩形サイズY"
				}
			],
			"description": [
				"現在の操作先ウィンドウに対して回転可能な矩形の描画を行います。",
				"$ref(boxf)と違い`指定した座標が矩形の中心として扱われること`に注意してください。",
				"",
				"描画で使用されるパラメータは次の表の通りです。$",
				"$",
				"|内容|使用される値|$",
				"|:--|:--|$",
				"|色|カレントカラー（$ref(color)等で設定したもの）|$",
				"|描画モード|$ref(gmode)で設定したモード|$"
			],
			"relationGroup": [
				"stdDrawPrimitive"
			]
		},
		"gcopy": {
			"type": "function",
			"summary": "ウィンドウ内容をコピー描画",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "srcScreenID",
					"description": "コピー元スクリーンID",
					"omitted": "0"
				},
				{
					"name": "srcLeftTopX",
					"description": "コピー元の左上X座標",
					"omitted": "0"
				},
				{
					"name": "srcLeftTopY",
					"description": "コピー元の左上Y座標",
					"omitted": "0"
				},
				{
					"name": "copySizeX",
					"description": "コピーサイズX",
					"omitted": "カレントコピーサイズX"
				},
				{
					"name": "copySizeY",
					"description": "コピーサイズY",
					"omitted": "カレントコピーサイズY"
				}
			],
			"description": [
				"現在の操作先ウィンドウに対して、srcScreenIDで指定したウィンドウの内容の一部をカレントポジションにコピー描画します。",
				"srcScreenIDに現在の操作先ウィンドウと同じIDを指定した場合エラーになります。",
				"",
				"gcopyではカレントポジションは`描画する画像の左上座標`として使用されます。",
				"",
				"描画で使用されるパラメータは次の表の通りです。$",
				"$",
				"|内容|使用される値|$",
				"|:--|:--|$",
				"|描画モード|$ref(gmode)で設定したモード|$",
				"|乗算カラー|$ref(gmulcolor)で設定したカラー|$"
			],
			"relationGroup": [
				"stdDrawPrimitive"
			]
		},
		"gzoom": {
			"type": "function",
			"summary": "ウィンドウ内容を拡縮コピー描画",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "drawSizeX",
					"description": "コピー描画時のサイズX"
				},
				{
					"name": "drawSizeY",
					"description": "コピー描画時のサイズY"
				},
				{
					"name": "srcScreenID",
					"description": "コピー元スクリーンID",
					"omitted": "0"
				},
				{
					"name": "srcLeftTopX",
					"description": "コピー元の左上X座標",
					"omitted": "0"
				},
				{
					"name": "srcLeftTopY",
					"description": "コピー元の左上Y座標",
					"omitted": "0"
				},
				{
					"name": "copySizeX",
					"description": "コピーサイズX",
					"omitted": "カレントコピーサイズX"
				},
				{
					"name": "copySizeY",
					"description": "コピーサイズY",
					"omitted": "カレントコピーサイズY"
				},
				{
					"name": "[zoomMode]",
					"description": "モード（互換用パラメータ）",
					"omitted": "0"
				}
			],
			"description": [
				"現在の操作先ウィンドウに対して、srcScreenIDで指定したウィンドウの内容の一部をカレントポジションに拡縮してコピー描画します。",
				"srcScreenIDに現在の操作先ウィンドウと同じIDを指定した場合エラーになります。",
				"",
				"描画で使用されるパラメータは次の表の通りです。$",
				"$",
				"|内容|使用される値|$",
				"|:--|:--|$",
				"|描画モード|$ref(gmode)で設定したモード|$",
				"|乗算カラー|$ref(gmulcolor)で設定したカラー|$",
				"$",
				"zoomModeはHSP3との互換性のために用意されたパラメータで、指定しても無視されます。"
			],
			"relationGroup": [
				"stdDrawPrimitive"
			]
		},
		"grotate": {
			"type": "function",
			"summary": "ウィンドウ内容を拡縮回転コピー描画",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "srcScreenID",
					"description": "コピー元スクリーンID",
					"omitted": "0"
				},
				{
					"name": "srcLeftTopX",
					"description": "コピー元の左上X座標",
					"omitted": "0"
				},
				{
					"name": "srcLeftTopY",
					"description": "コピー元の左上Y座標",
					"omitted": "0"
				},
				{
					"name": "rad",
					"description": "回転角度[rad]",
					"omitted": "0"
				},
				{
					"name": "drawSizeX",
					"description": "コピー描画時のサイズX",
					"omitted": "カレントコピーサイズX"
				},
				{
					"name": "drawSizeY",
					"description": "コピー描画時のサイズY",
					"omitted": "カレントコピーサイズY"
				}
			],
			"description": [
				"現在の操作先ウィンドウに対して、srcScreenIDで指定したウィンドウの内容の一部をカレントポジションに拡縮回転コピー描画します。",
				"srcScreenIDに現在の操作先ウィンドウと同じIDを指定した場合エラーになります。",
				"",
				"grotateではカレントポジションは$ref(gcopy)と違い`描画する画像の中心座標`として使用されることに注意してください。",
				"",
				"描画で使用されるパラメータは次の表の通りです。$",
				"$",
				"|内容|使用される値|$",
				"|:--|:--|$",
				"|描画モード|$ref(gmode)で設定したモード|$",
				"|乗算カラー|$ref(gmulcolor)で設定したカラー|$"
			],
			"relationGroup": [
				"stdDrawPrimitive"
			]
		},
		"gsquare": {
			"type": "function",
			"summary": "ウィンドウ内容を自由変形コピー描画",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "srcScreenID",
					"description": "コピー元スクリーンID",
					"omitted": "0"
				},
				{
					"name": "drawPosXs",
					"description": "コピー先のX座標配列"
				},
				{
					"name": "drawPosYs",
					"description": "コピー先のY座標配列"
				},
				{
					"name": "srcXs",
					"description": "コピー元のX座標配列またはカラーコード配列"
				},
				{
					"name": "srcYs",
					"description": "コピー元のY座標配列"
				}
			],
			"description": [
				"現在の操作先ウィンドウに対して、srcScreenIDで指定したウィンドウの内容の一部を自由変形コピー描画します。",
				"srcScreenIDに現在の操作先ウィンドウと同じIDを指定した場合エラーになります。",
				"",
				"この命令ではコピー先およびコピー元の座標をdrawPosXsとdrawPosYs、srcXsとsrcYsに分けて格納し指定します。",
				"座標は左上、右上、右下、左下の順番に格納されていると解釈します。",
				"つまり、drawPosXzやdrawPosYsなどは4要素の配列で、整数値または実数値の配列であると想定されます。",
				"",
				"srcScreenIDに-1から-256の値を指定した場合、ウィンドウ内容のコピーではなく$ref(color)で設定した単色塗りつぶしが行われます。",
				"この際、srcXsとsrcYsは使わないため、省略することが可能です。",
				"",
				"srcScreenIDに-257（マクロでは$ref(gsquared_grad)）を指定した場合、ウィンドウ内容のコピーではなくグラデーション塗りつぶしが行われます。",
				"各頂点のカラーはsrcXsに整数値で格納し、その値は`0xrrggbb`というRGB値を1つの整数にまとめた値と解釈します。"
			],
			"relationGroup": [
				"stdDrawPrimitive"
			]
		},
		"gsquared_grad": {
			"type": "constant",
			"summary": "gsquareのグラデーション塗りつぶし",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"$ref(gsquare)における描画オプション（グラデーション塗りつぶし）を示す整数の定数です。"
			],
			"relationGroup": [
				"stdConstantDrawPrimitive"
			]
		},

		"mes": {
			"type": "function",
			"summary": "文字列を描画",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "message",
					"description": "描画する文字列"
				},
				{
					"name": "mode",
					"description": "文字列描画モード",
					"omitted": "0"
				}
			],
			"description": [
				"現在の操作先ウィンドウに対して、カレントポジションから文字列を描画します。",
				"",
				"この命令の実行後、カレントポジションが描画した文字列の次の行に設定されます。",
				"これにより、連続してmes命令を呼び出すと自動的に改行ありされた状態で描画することが出来ます。",
				"",
				"描画で使用されるパラメータは次の表の通りです。$",
				"$",
				"|内容|使用される値|$",
				"|:--|:--|$",
				"|色|カレントカラー（$ref(color)等で設定したもの）|$",
				"|描画モード|常にアルファブレンドしない|$",
				"|フォント|$ref(font)で設定したフォント|$",
				"",
				"この命令の後、出力されたメッセージのXサイズは$ref(ginfo_mesx)に、Yサイズは$ref(ginfo_mesy)に格納されます。",
				"",
				"文字列描画モードmodeは文字列描画の細かいオプションが設定できます。$",
				"$",
				"|mode|マクロ|内容|$",
				"|:--|:--|:--|$",
				"|1|`mesopt_nocr`|カレントポジションの変更をY軸にずらすのではなく、X軸にずらす<br>この命令後、カレントポジションは$(ginfo_mesx)だけX軸を加算した値に設定されます。|$",
				"|2|`mesopt_shadow`|ドロップシャドウ描画を行います。色は$ref(objcolor)で設定されたものになります。|$",
				"|4|`mesopt_outline`|アウトライン描画を行います。色は$ref(objcolor)で設定されたものになります。|$",
				"|8|`mesopt_light`|HSP3との互換性パラメータです。|$",
				"|16|`mesopt_gmode`|$ref(gmode)で設定された描画モードを用いて描画を行います。|$",
				"|-|`mesopt_hcenter@n2`|カレントポジションのX軸方向を文字列中心として描画を行います。|$",
				"|-|`mesopt_vcenter@n2`|カレントポジションのY軸方向を文字列中心として描画を行います。|$",
				"|-|`mesopt_hright@n2`|カレントポジションのX軸方向を文字列右端として描画を行います。|$",
				"$",
				""
			],
			"relationGroup": [
				"stdDrawFont"
			]
		},
		"mesopt_nocr": {
			"type": "constant",
			"summary": "文字列描画のオプション（カレントポジションのX軸変更）",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"$ref(mes)における文字列描画のオプション（カレントポジションのX軸変更）を示す整数の定数です。"
			],
			"relationGroup": [
				"stdConstantMessage"
			]
		},
		"mesopt_shadow": {
			"type": "constant",
			"summary": "文字列描画のオプション（ドロップシャドウ）",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"$ref(mes)における文字列描画のオプション（ドロップシャドウ）を示す整数の定数です。"
			],
			"relationGroup": [
				"stdConstantMessage"
			]
		},
		"mesopt_outline": {
			"type": "constant",
			"summary": "文字列描画のオプション（アウトライン）",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"$ref(mes)における文字列描画のオプション（アウトライン）を示す整数の定数です。"
			],
			"relationGroup": [
				"stdConstantMessage"
			]
		},
		"mesopt_light": {
			"type": "constant",
			"summary": "文字列描画のオプション",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"$ref(mes)における文字列描画のオプションを示す整数の定数です。"
			],
			"relationGroup": [
				"stdConstantMessage"
			]
		},
		"mesopt_gmode": {
			"type": "constant",
			"summary": "文字列描画のオプション（描画モード反映）",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"$ref(mes)における文字列描画のオプション（描画モード反映）を示す整数の定数です。"
			],
			"relationGroup": [
				"stdConstantMessage"
			]
		},
		"mesopt_hcenter@n2": {
			"type": "constant",
			"summary": "文字列描画のオプション（X軸センタリング）",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"$ref(mes)における文字列描画のオプション（X軸センタリング）を示す整数の定数です。"
			],
			"relationGroup": [
				"stdConstantMessage"
			]
		},
		"mesopt_vcenter@n2": {
			"type": "constant",
			"summary": "文字列描画のオプション（Y軸センタリング）",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"$ref(mes)における文字列描画のオプション（Y軸センタリング）を示す整数の定数です。"
			],
			"relationGroup": [
				"stdConstantMessage"
			]
		},
		"mesopt_hright@n2": {
			"type": "constant",
			"summary": "文字列描画のオプション（X軸右端アライン）",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"$ref(mes)における文字列描画のオプション（X軸右端アライン）を示す整数の定数です。"
			],
			"relationGroup": [
				"stdConstantMessage"
			]
		},
		"font": {
			"type": "function",
			"summary": "フォントを設定",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "fontName",
					"description": "フォント名"
				},
				{
					"name": "height",
					"description": "フォントの高さ",
					"omitted": "18",
					"limit": "[1, 99]"
				},
				{
					"name": "style",
					"description": "スタイル",
					"omitted": "0"
				}
			],
			"description": [
				"現在の操作先ウィンドウに対して、文字列の描画などに使用するフォントを設定します。",
				"",
				"fontName の省略が行われた場合、現在のフォントが使われます。",
				"※スタイルやフォントの高さのみ変更する場合に有利です。",
				"",
				"スタイルとして設定できる値は次の表の通りです。$",
				"$",
				"|内容|使用される値|$",
				"|:--|:--|$",
				"|1|太文字（互換用パラメータで、無視されます）|$",
				"|2|斜体（エミュレーションされます）|$",
				"|4|下線（互換用パラメータで、無視されます）|$",
				"|8|打消し線（互換用パラメータで、無視されます）|$",
				"|16|アンチエイリアス（互換用パラメータで、無視されます）|$",
				"$",
				"複数組み合わせたスタイルを指定したい場合、それらの値の合計またはビット和をとったものを指定してください。",
				"",
				"正しくフォントが設定できた場合は0が返されます。",
				"それ以外の、例えばfontNameで指定したフォントが見つからなかった場合などでは、デフォルトのフォントが設定され-1が返されます。",
				"",
				"デフォルトフォントの名前は`n2default`です。",
				"デフォルトフォントではJIS第一水準の漢字の大半を収録してますが、それ以外の漢字はほとんど収録されていません。",
				"フォントは別途読み込んで登録することが可能なので、異なるフォントを使用したい場合は$ref(fontload@n2)命令を参照してください。"
			],
			"relationGroup": [
				"stdDrawFont"
			]
		},
		"sysfont": {
			"type": "function",
			"summary": "システムフォントを設定",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "fontIndex",
					"description": "システムフォントインデックス"
				}
			],
			"description": [
				"現在の操作先ウィンドウに対して、文字列の描画などに使用するフォントをシステムフォントから設定します。",
				"",
				"この命令はHSP3との互換性のために用意されたもので、この命令を実行後はデフォルトのフォントが設定されます。"
			],
			"relationGroup": [
				"stdDrawFont"
			]
		},
		"fontloadmem@n2": {
			"type": "function",
			"summary": "フォントを登録",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "fontName",
					"description": "登録するフォント名"
				},
				{
					"name": "fontBinaryVar",
					"description": "フォントのバイナリを格納する変数"
				},
				{
					"name": "fontBinarySize",
					"description": "フォントのバイナリサイズ",
					"omitted": "-1"
				},
				{
					"name": "fontBakeHeight",
					"description": "フォントのベイク時のサイズ",
					"omitted": "18"
				}
			],
			"description": [
				"fontBinaryVar で指定したバイナリデータをフォントデータとして解釈し、fontName で指定したフォント名として登録します。",
				"登録されたフォントは$ref(font)でのフォント名として指定可能になります。",
				"既存のフォント名を指定した場合、既存のフォントは上書きされます。",
				"つまり、デフォルトのフォント名である`n2default`をフォント名として登録すると、GUIを含むデフォルトの描画フォントが変更されます。",
				"※GUIの描画フォントについてはHSP3互換のobjmodeによるフォント指定を将来的にサポート予定ですので、現時点でのGUIのフォント上書き挙動は将来的に互換性がない点に注意してください。",
				"",
				"フォントのバイナリデータとしては `トゥルータイプフォント（ttf）` と 一部の `アウトラインフォント（otf）` がサポートされます。",
				"",
				"fontBinarySize が負の値の場合、fontBinaryVar のサイズが使われます。",
				"",
				"フォントのロードが成功した場合、1を返します。",
				"フォントのロードが失敗した場合、エラーにならず0を返し、エラー情報を$ref(refstr)に格納します。",
				"",
				"fontBakeHeight は、システムが持つフォントのアトラステクスチャに対して、フォントのグリフをベイクする時の高さ（ピクセル）として使われます。",
				"この値を大きくすればグリフの解像度が上がりますが、グリフが使用するアトラステクスチャのスペースも広くなります。",
				"アトラステクスチャにベイクするスペースがなくなった時、新しいグリフは代替文字で描画されます。",
				"アトラステクスチャのサイズを変更するには$ref(sysreq@n2)を参照してください。",
				"この命令実行時に、システムに設定されているアトラステクスチャのサイズが参照されます。"
			],
			"relationGroup": [
				"stdDrawFont"
			]
		},
		"fontload@n2": {
			"type": "function",
			"summary": "フォントを登録",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "fontName",
					"description": "登録するフォント名"
				},
				{
					"name": "fontFilepath",
					"description": "フォントのファイルパス"
				},
				{
					"name": "fontBakeHeight",
					"description": "フォントのベイク時のサイズ",
					"omitted": "18"
				}
			],
			"description": [
				"fontFilepath で指定したファイルをフォントデータとして解釈し、fontName で指定したフォント名として登録します。",
				"詳細については$ref(fontloadmem@n2)を参照してください。"
			],
			"relationGroup": [
				"stdDrawFont"
			]
		},
		"picmes@n2": {
			"type": "function",
			"summary": "文字列をベイク",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "message",
					"description": "ベイクする文字列"
				},
				{
					"name": "height",
					"description": "ベイクするフォントの高さ"
				},
				{
					"name": "flags",
					"description": "ベイク時のフラグ",
					"omitted": "0"
				}
			],
			"description": [
				"現在設定されているフォントを使い、アトラステクスチャからの描画ではなく直接テクスチャにベイクします。",
				"ベイク先は現在の操作先ウィンドウで、カレントポジションからベイクを始めます。",
				"ベイク時の文字列カラーはカレントカラーが使われ、アルファ値は文字のアルファ値がそのまま使われます。",
				"",
				"flags として指定できる値は次の表の通りです。$",
				"$",
				"|値|マクロ|処理|$",
				"|:--|:--|:--|$",
				"|1|`picmesopt_alphablend@n2`|ベイクの際にアルファブレンドを行います。|$",
				"$",
				"この命令の後、$ref(ginfo_mex)と$ref(ginfo_mesy)にベイクした文字列のサイズが代入されます。",
				"$ref(mes)と違いカレントポジションは変更されません。",
				"",
				"この命令は対象のウィンドウのテクスチャをCPUから書き換えるため、GPUのパイプラインストールを引き起こします。",
				"また、ベイクのためにフォントのベクターデータをラスタライズする処理なども含まれるため、この命令は処理は軽くはありません。",
				"予めこの命令により高解像度で文字列を描画しておき、テクスチャとして使用する、といった使い方が想定となります。"
			],
			"relationGroup": [
				"stdDrawFont"
			]
		},
		"picmesopt_alphablend@n2": {
			"type": "constant",
			"summary": "文字列ベイクのオプション（アルファブレンド）",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"$ref(picmes@n2)における文字列ベイクのオプション（アルファブレンド）を示す整数の定数です。"
			],
			"relationGroup": [
				"stdConstantFont"
			]
		},

		"getkey": {
			"type": "function",
			"summary": "キー状態の取得",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "var",
					"description": "キー状態を保存する変数"
				},
				{
					"name": "vkey",
					"description": "仮想キーコード"
				}
			],
			"description": [
				"キーボード及びマウスボタンの押下状態を取得し、varへ代入します。",
				"",
				"仮想キーコードの一部はASCIIコードと互換性があるので、`A～Z`など文字に関連したキーコードは`'A'`のように指定することが出来ます。",
				"その他の仮想キーコードについては次の表を参考にしてください。$",
				"$",
				"|vkey|内容|$",
				"|:--|:--|$",
				"|1|マウス左ボタン|$",
				"|2|マウス右ボタン|$",
				"|4|マウス中央ボタン|$",
				"|8|BackSpaceキー|$",
				"|9|Tabキー|$",
				"|13|Enterキー|$",
				"|16|左Shiftキー|$",
				"|17|左Ctrlキー|$",
				"|18|左Altキー|$",
				"|27|Escapeキー|$",
				"|32|Spaceキー|$",
				"|37|←キー|$",
				"|38|↑キー|$",
				"|39|→キー|$",
				"|40|↓キー|$",
				"|48 - 57|0 - 9キー|$",
				"|65 - 90 または 97 - 122<br>`'A'`などの記述も可|A - Zキー|$",
				"|112 - 123|F1 - F12キー|"
			],
			"relationGroup": [
				"stdInputCommon"
			]
		},
		"stick": {
			"type": "function",
			"summary": "キー状態の取得",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "var",
					"description": "キー状態を保存する変数"
				},
				{
					"name": "noTrigKeys",
					"description": "非トリガーキーマスク",
					"omitted": "0"
				},
				{
					"name": "checkWindowActive",
					"description": "ウィンドウアクティブチェック",
					"omitted": "1"
				}
			],
			"description": [
				"よく使われるキー及びマウスボタンの押下状態を取得し、varへ代入します。",
				"",
				"代入される値の各ビットが対応するボタンは次の表の通りです。$",
				"$",
				"|bit|内容|$",
				"|:--|:--|$",
				"|1|←キー|$",
				"|2|↑キー|$",
				"|4|→キー|$",
				"|8|↓キー|$",
				"|16|Spaceキー|$",
				"|32|Enterキー|$",
				"|64|Ctrlキー|$",
				"|128|Escapeキー|$",
				"|256|マウスの左ボタン|$",
				"|512|マウスの右ボタン|$",
				"|1024|Tabキー|$",
				"$",
				"通常、そのボタンが押された瞬間（トリガー時）にのみ該当のビットがONになりますが、`noTrigKeys`で指定したビットについては押されている場合に常にONになります。",
				"",
				"checkWindowActiveが1の場合、現在の操作先ウィンドウがアクティブでない（入力フォーカスを持たない）場合は常に0が代入されます。"
			],
			"relationGroup": [
				"stdInputCommon"
			]
		},

		"clipchks@n2": {
			"type": "function",
			"summary": "クリップボードの文字列があるかを取得",
			"group": ["standard"],
			"tag": ["n2"],
			"parameters": [
			],
			"description": [
				"クリップボードに文字列が格納されていれば1を、そうでなければ0を返します。"
			],
			"relationGroup": [
				"stdClipboardCommon"
			]
		},
		"clipgets@n2": {
			"type": "function",
			"summary": "クリップボードの文字列を取得",
			"group": ["standard"],
			"tag": ["n2"],
			"parameters": [
			],
			"description": [
				"クリップボードに文字列が格納されていればその文字列を返します。",
				"文字列が格納されていない場合、空文字が返されます。"
			],
			"relationGroup": [
				"stdClipboardCommon"
			]
		},
		"clipsets@n2": {
			"type": "function",
			"summary": "クリップボードへ文字列を設定",
			"group": ["standard"],
			"tag": ["n2"],
			"parameters": [
				{
					"name": "str",
					"description": "設定する文字列"
				}
			],
			"description": [
				"クリップボードに`str`で指定した文字列を格納します。"
			],
			"relationGroup": [
				"stdClipboardCommon"
			]
		},

		"picload": {
			"type": "function",
			"summary": "画像をロード",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "imageFilePath",
					"description": "ロードする画像のファイルパス"
				},
				{
					"name": "mode",
					"description": "ロードモード"
				}
			],
			"description": [
				"現在の操作先ウィンドウに画像をロードします。",
				"画像のロードに失敗したらエラーとなります。",
				"",
				"ロードモードによる挙動の違いは次の表のとおりです。$",
				"$",
				"|mode|内容|$",
				"|:--|:--|$",
				"|0|ウィンドウのサイズを画像サイズに初期化<br>背景色`(255, 255, 255, 255)`上に画像をアルファブレンド|$",
				"|1|カレントポジションへ画像をロード。|$",
				"|2|ウィンドウのサイズを画像サイズに初期化<br>背景色`(0, 0, 0, 255)`上に画像をアルファブレンド|$",
				"|-1|ウィンドウのサイズを画像サイズに初期化<br>画像の内容をアルファチャンネルも含め同一にする（独自拡張で、HSP3非互換）|$"
			],
			"relationGroup": [
				"stdImageCommon"
			]
		},
		"celload": {
			"type": "function",
			"summary": "画像をロード",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "imageFilePath",
					"description": "ロードする画像のファイルパス"
				},
				{
					"name": "screenID",
					"description": "読み込み先のウィンドウID",
					"omitted": "-1"
				},
				{
					"name": "mode",
					"description": "ロードモード"
				}
			],
			"description": [
				"screenIDのウィンドウに画像をロードし、ロードしたウィンドウのIDを返します。",
				"画像のロードに失敗したらエラーとなります。",
				"",
				"$ref(picload)と違い、読み込み先のウィンドウを明示的に指定できることが出来るほか、screenIDに負の値を指定すると、自動的に使用されてないウィンドウIDに初期化します。",
				"また、命令後に現在の操作先ウィンドウも切り替えません。",
				"",
				"ロードモードについては$ref(picload)と同様なのでそちらを参照してください。"
			],
			"relationGroup": [
				"stdImageCommon",
				"stdDrawCel"
			]
		},
		"celdiv": {
			"type": "function",
			"summary": "cel命令の分割設定を変更",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "screenID",
					"description": "対象のウィンドウID"
				},
				{
					"name": "blockSizeX",
					"description": "分割ブロックのサイズX",
					"omitted": "0"
				},
				{
					"name": "blockSizeY",
					"description": "分割ブロックのサイズY",
					"omitted": "0"
				},
				{
					"name": "offsetX",
					"description": "中心オフセットX",
					"omitted": "0"
				},
				{
					"name": "offsetY",
					"description": "中心オフセットY",
					"omitted": "0"
				}
			],
			"description": [
				"screenIDのウィンドウのcel命令の分割設定を変更します。",
				"screenIDのウィンドウが存在しない場合はエラーとなります。",
				"",
				"cel命令はウィンドウの内容をブロックという単位に分割し、その単位での描画を行う事ができます。",
				"この命令ではそのブロックのサイズをblockSizeXとblockSizeYで指定します。",
				"ブロックサイズが0の場合、ウィンドウ全体をブロックとして処理します。",
				"",
				"また、offsetXとoffsetYによって、各ブロックの描画時の拡大縮小、及び回転の中心座標を指定することができます。",
				"offsetXとoffsetYが`(0, 0)`の場合、各ブロックの左上を中心座標として描画されます。"
			],
			"relationGroup": [
				"stdDrawCel"
			]
		},
		"celput": {
			"type": "function",
			"summary": "分割ブロックを描画",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "screenID",
					"description": "分割ブロックを持つウィンドウID"
				},
				{
					"name": "blockIndex",
					"description": "描画ブロックのインデックス",
					"omitted": "0"
				},
				{
					"name": "zoomX",
					"description": "X方向のブロックの拡大率",
					"omitted": "1"
				},
				{
					"name": "zoomY",
					"description": "Y方向のブロックの拡大率",
					"omitted": "1"
				},
				{
					"name": "radian",
					"description": "回転角度[rad]",
					"omitted": "0"
				}
			],
			"description": [
				"screenIDのウィンドウの、$ref(celdiv) 命令によって設定された分割ブロックの中でblockIndexのブロックを現在の操作先ウィンドウに描画します。",
				"描画される位置はカレントポジションです。",
				"",
				"この命令の後、カレントポジションのX座標を描画サイズX（ブロックサイズX x X方向の拡大率）だけ大きくします。",
				"この副作用はブロックの回転などには左右されないことに注意してください。"
			],
			"relationGroup": [
				"stdDrawCel"
			]
		},
		"celbitmap": {
			"type": "function",
			"summary": "変数バッファとウィンドウ内容の変換",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "screenID",
					"description": "対象のウィンドウID"
				},
				{
					"name": "picVar",
					"description": "ピクセルデータを保持・格納する変数"
				},
				{
					"name": "mode",
					"description": "動作モード",
					"omitted": "0"
				}
			],
			"description": [
				"screenIDのウィンドウのピクセルデータと変数picVarの内容との相互変換を行います。",
				"",
				"処理内容は動作モードにより大きく変わります。$",
				"$",
				"|mode|マクロ|内容|$",
				"|:--|:--|:--|$",
				"|0|`celbitmap_rgb`|ピクセルデータの並びは`0xaarrggbb`|$",
				"|1|`celbitmap_bgr`|ピクセルデータの並びは`0xaabbggrr`|$",
				"|16|`celbitmap_capture`|ウィンドウのピクセルデータを変数に格納|$",
				"$",
				"`celbitmap_capture`を指定しない場合、変数picVarの内容をピクセルデータとみなして、対象のウィンドウの内容を書き換えます。",
				"この時、変数picVarはint型の配列であり、各要素にmodeで指定したフォーマットでピクセルのカラーが入っていると想定されます。",
				"",
				"`celbitmap_capture`が指定されている場合、対象のウィンドウのピクセルデータを変数picVarへ格納します。",
				"この時、変数picVarは自動的にint型になり、配列は1次元で全ピクセルデータを収められるサイズになります。",
				"つまり、ウィンドウサイズを`(w, h)`とすると、少なくとも`w * h`個の要素を持った配列になります。"
			],
			"relationGroup": [
				"stdDrawCel"
			]
		},
		"celbitmap_rgb": {
			"type": "constant",
			"summary": "celbitmapのオプション（ARGB）",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"$ref(celbitmap)におけるオプション（ARGB）を示す整数の定数です。"
			],
			"relationGroup": [
				"stdConstantCel"
			]
		},
		"celbitmap_bgr": {
			"type": "constant",
			"summary": "celbitmapのオプション（ABGR）",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"$ref(celbitmap)におけるオプション（ABGR）を示す整数の定数です。"
			],
			"relationGroup": [
				"stdConstantCel"
			]
		},
		"celbitmap_capture": {
			"type": "constant",
			"summary": "celbitmapのオプション（キャプチャ）",
			"group": ["basics"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"$ref(celbitmap)におけるオプション（キャプチャ）を示す整数の定数です。"
			],
			"relationGroup": [
				"stdConstantCel"
			]
		},
		"celbitmap@n2": {
			"type": "function",
			"summary": "変数バッファとウィンドウ内容の変換",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "screenID",
					"description": "対象のウィンドウID"
				},
				{
					"name": "picVar",
					"description": "ピクセルデータを保持・格納する変数"
				},
				{
					"name": "mode",
					"description": "動作モード",
					"omitted": "0"
				},
				{
					"name": "leftTopX",
					"description": "対象領域の左上座標X",
					"omitted": "0"
				},
				{
					"name": "leftTopY",
					"description": "対象領域の左上座標Y",
					"omitted": "0"
				},
				{
					"name": "rigthBottomX",
					"description": "対象領域の右下座標X",
					"omitted": "0"
				},
				{
					"name": "rightBottomY",
					"description": "対象領域の右下座標Y",
					"omitted": "0"
				}
			],
			"description": [
				"screenIDのウィンドウのピクセルデータと変数picVarの内容との相互変換を行います。",
				"処理内容は基本的には$ref(celbitmap)と変わりませんが、対象ウィンドウの領域指定ができる点のみ異なります。",
				"",
				"rightBottomXとrightBottomYは0以下の値が指定された場合、対象ウィンドウのサイズがそれぞれ使われます。",
				"つまり、mode以降のパラメータを全て省略した場合、$ref(celbitmap)と処理内容が同じになります。"
			],
			"relationGroup": [
				"stdDrawCel"
			]
		},

		"objsize": {
			"type": "function",
			"summary": "カレントオブジェクトサイズの設定",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "sizeX",
					"description": "設定するサイズX",
					"omitted": "64"
				},
				{
					"name": "sizeY",
					"description": "設定するサイズY",
					"omitted": "24"
				},
				{
					"name": "minIncPosY",
					"description": "Y方向の最低限確保サイズ",
					"omitted": "0"
				}
			],
			"description": [
				"現在の操作先ウィンドウのカレントオブジェクトサイズを設定します。",
				"カレントオブジェクトサイズは、$ref(button)や$ref(chkbox)などのオブジェクト（ウィジェット）配置時のサイズとして使われます。",
				"",
				"minIncPosYは、オブジェクト配置後にカレントポジションのY方向の最低移動量として使われます。",
				"このminIncPosYと配置オブジェクトのYサイズのうち、大きい分だけ実際にカレントポジションが移動します。"
			],
			"relationGroup": [
				"stdWidgetCommon"
			]
		},
		"objprm": {
			"type": "function",
			"summary": "オブジェクトの内容を変更",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "objectID",
					"description": "対象のオブジェクトID",
					"omitted": "0"
				},
				{
					"name": "param",
					"description": "設定内容（オブジェクト毎に固有）"
				}
			],
			"description": [
				"現在の操作先ウィンドウのobjectIDに対応するオブジェクトの内容を変更します。",
				"該当のオブジェクトが存在しない場合エラーになります。",
				"",
				"paramは該当のオブジェクトの種類（ボタンかチェックボックスであるかなど）に応じて変化します。$",
				"$",
				"|オブジェクト|設定内容|$",
				"|:--|:--|$",
				"|button|ボタンのラベル（文字列）|$",
				"|chkbox|チェック状態（0または1の整数値）|$",
				"|inputまたはmesbox|入力されている文字列|$"
			],
			"relationGroup": [
				"stdWidgetCommon"
			]
		},
		"objenable": {
			"type": "function",
			"summary": "オブジェクトを有効化／無効化",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "objectID",
					"description": "対象のオブジェクトID",
					"omitted": "0"
				},
				{
					"name": "enable",
					"description": "有効か無効か",
					"omitted": "1"
				}
			],
			"description": [
				"現在の操作先ウィンドウのobjectIDに対応するオブジェクトの有効／無効を変更します。",
				"該当のオブジェクトが存在しない場合エラーになります。",
				"",
				"enableが0なら無効、0以外なら有効に設定されます。",
				"無効に設定されたオブジェクトは$ref(button)ならば押しても反応がない、$ref(input)ならば新しく文字が入力できない、などの状態になります。",
				"",
				"全てのオブジェクトに対して有効／無効の設定が可能です。"
			],
			"relationGroup": [
				"stdWidgetCommon"
			]
		},
		"clrobj": {
			"type": "function",
			"summary": "オブジェクトの削除",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "startID",
					"description": "対象のオブジェクトID（開始）",
					"omitted": "0"
				},
				{
					"name": "endID",
					"description": "対象のオブジェクトID（終了）",
					"omitted": "-1"
				}
			],
			"description": [
				"現在の操作先ウィンドウから、[startID, endID]のオブジェクトを削除します。",
				"endIDが省略した（または負の値）の場合、startID以降の全てのオブジェクトを対象とします。",
				"",
				"範囲が[starID, endID]のため、特定のIDのオブジェクトだけ削除したい場合、`clrobj objectID, objectID`のようにそのオブジェクトのIDを両方に指定してください。"
			],
			"relationGroup": [
				"stdWidgetCommon"
			]
		},
		"button": {
			"type": "function",
			"summary": "ボタンの配置",
			"group": ["standard"],
			"tag": [],
			"preParameters": [
				{
				"name": "[goto/gosub]",
				"description": "クリック時のラベルをgoto/gosubでどちらで飛ぶか"
				}
			],
			"parameters": [
				{
					"name": "label",
					"description": "ボタンのラベル（ボタン内に描画される文字列）"
				},
				{
					"name": "*onClickedLabel",
					"description": "クリックされた時に呼び出されるラベル"
				}
			],
			"description": [
				"現在の操作先ウィンドウのカレントポジションにボタンを配置し、そのオブジェクトIDを返します。",
				"",
				"ボタンが押された際、onClickedLabelに指定したラベルが呼び出されます。",
				"その際、goto/gosubで指定した方法で呼び出されるため、gosubで呼び出された場合はreturnが必要になります。",
				"そうでない場合、サブルーチンのネストレベルがクリックの度に増えるため、ネストの最大数に達した際にエラーとなります。",
				"",
				"歴史的な経緯から*gotoによるコールバックラベルの指定は非推奨*となります。",
				"*新規でコードを書く際は可能な限りgosubを使うよう心掛けてください*。"
			],
			"relationGroup": [
				"stdWidgetCommon"
			]
		},
		"chkbox": {
			"type": "function",
			"summary": "チェックボックスの配置",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "label",
					"description": "チェックボックスのラベル"
				},
				{
					"name": "var",
					"description": "チェックボックスの状態を維持する変数"
				}
			],
			"description": [
				"現在の操作先ウィンドウのカレントポジションにチェックボックスを配置し、そのオブジェクトIDを返します。",
				"",
				"チェックボックスは$",
				"$",
				"- 配置時にvarの内容を記憶$",
				"- クリック等で状態が変わった際にvarへ書き込みしなおす$",
				"$",
				"といった挙動になるため、チェックボックス配置後にvarの内容を書き換えても表示に反映されません。",
				"表示に反映させたい場合は$ref(objprm)を使用してください。",
				"",
				"また、後からvarへチェックボックスのチェック状態（整数値）が代入されるため、その時点でvarの型が整数型以外の場合意図せぬ型変更や代入エラーが発生するため注意してください。"
			],
			"relationGroup": [
				"stdWidgetCommon"
			]
		},
		"input": {
			"type": "function",
			"summary": "入力ボックスの配置",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "var",
					"description": "入力ボックスの内容を維持する変数"
				},
				{
					"name": "sizeX",
					"description": "サイズX",
					"omitted": "カレントオブジェクトサイズX"
				},
				{
					"name": "sizeY",
					"description": "サイズY",
					"omitted": "カレントオブジェクトサイズY"
				},
				{
					"name": "maxBufferSize",
					"description": "最大書き込みサイズ",
					"omitted": "0"
				}
			],
			"description": [
				"現在の操作先ウィンドウのカレントポジションに入力ボックスを配置し、そのオブジェクトIDを返します。",
				"",
				"入力ボックスは単一行の文字列入力ウィジェットです。",
				"複数行の文字列入力を行わせたい場合は$ref(mesbox)を使用してください。",
				"",
				"最大書き込みサイズはそのウィジェットに書き込み可能な文字列の最大バッファサイズで、0以下の値をmaxBufferSizeに指定した場合システムのデフォルトバッファサイズが設定されます。",
				"大量の文字列入力をサポートしたい場合は大きめの数値を指定してください。",
				"また、この数値はバッファサイズであり、実際に入力可能な文字数とは必ずしも一致しないことに注意してください。"
			],
			"relationGroup": [
				"stdWidgetCommon"
			]
		},
		"mesbox": {
			"type": "function",
			"summary": "メッセージボックスの配置",
			"group": ["standard"],
			"tag": [],
			"parameters": [
				{
					"name": "var",
					"description": "メッセージボックスの内容を維持する変数"
				},
				{
					"name": "sizeX",
					"description": "サイズX",
					"omitted": "カレントオブジェクトサイズX"
				},
				{
					"name": "sizeY",
					"description": "サイズY",
					"omitted": "カレントオブジェクトサイズY"
				},
				{
					"name": "[style]",
					"description": "メッセージボックスのスタイル（互換用パラメータ）",
					"omitted": "1"
				},
				{
					"name": "maxBufferSize",
					"description": "最大書き込みサイズ",
					"omitted": "0"
				}
			],
			"description": [
				"現在の操作先ウィンドウのカレントポジションにメッセージボックスを配置し、そのオブジェクトIDを返します。",
				"",
				"入力ボックスは複数行の文字列入力ウィジェットです。",
				"",
				"styleはHSP3との互換用パラメータで、実際には指定しても無視されます。",
				"",
				"最大書き込みサイズはそのウィジェットに書き込み可能な文字列の最大バッファサイズで、0以下の値をmaxBufferSizeに指定した場合システムのデフォルトバッファサイズが設定されます。",
				"大量の文字列入力をサポートしたい場合は大きめの数値を指定してください。",
				"また、この数値はバッファサイズであり、実際に入力可能な文字数とは必ずしも一致しないことに注意してください。"
			],
			"relationGroup": [
				"stdWidgetCommon"
			]
		},

		"ginfo_accx": {
			"type": "systemVariable",
			"summary": "加速度センサーの値X",
			"group": ["standard"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"システムの加速度センサーのX軸の値を取得します。"
			],
			"relationGroup": [
				"stdSystemVariable"
			]
		},
		"ginfo_accy": {
			"type": "systemVariable",
			"summary": "加速度センサーの値Y",
			"group": ["standard"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"システムの加速度センサーのY軸の値を取得します。"
			],
			"relationGroup": [
				"stdSystemVariable"
			]
		},
		"ginfo_accz": {
			"type": "systemVariable",
			"summary": "加速度センサーの値Z",
			"group": ["standard"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"システムの加速度センサーのZ軸の値を取得します。"
			],
			"relationGroup": [
				"stdSystemVariable"
			]
		},
		"ginfo_sel": {
			"type": "systemVariable",
			"summary": "操作先ウィンドウID",
			"group": ["standard"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"現在の操作先ウィンドウIDを示すシステム変数です。"
			],
			"relationGroup": [
				"stdSystemVariable"
			]
		},
		"imgunpackw@n2": {
			"type": "systemVariable",
			"summary": "imgunpackでの幅",
			"group": ["standard"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"最後に実行した$ref(imgunpack@n2)での画像データの幅を示すシステム変数です。"
			],
			"relationGroup": [
				"stdSystemVariable"
			]
		},
		"imgunpackh@n2": {
			"type": "systemVariable",
			"summary": "imgunpackでの高さ",
			"group": ["standard"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"最後に実行した$ref(imgunpack@n2)での画像データの高さを示すシステム変数です。"
			],
			"relationGroup": [
				"stdSystemVariable"
			]
		},
		"ginfo_winx": {
			"type": "systemVariable",
			"summary": "現在の操作先ウィンドウの幅",
			"group": ["standard"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"現在の操作先ウィンドウの幅を示すシステム変数です。"
			],
			"relationGroup": [
				"stdSystemVariable"
			]
		},
		"ginfo_winy": {
			"type": "systemVariable",
			"summary": "現在の操作先ウィンドウの高さ",
			"group": ["standard"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"現在の操作先ウィンドウの高さを示すシステム変数です。"
			],
			"relationGroup": [
				"stdSystemVariable"
			]
		},
		"mousex": {
			"type": "systemVariable",
			"summary": "現在の操作先ウィンドウでのマウスの座標X",
			"group": ["standard"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"現在の操作先ウィンドウでのマウスの座標Xを示すシステム変数です。"
			],
			"relationGroup": [
				"stdSystemVariable"
			]
		},
		"mousey": {
			"type": "systemVariable",
			"summary": "現在の操作先ウィンドウでのマウスの座標Y",
			"group": ["standard"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"現在の操作先ウィンドウでのマウスの座標Yを示すシステム変数です。"
			],
			"relationGroup": [
				"stdSystemVariable"
			]
		},
		"ginfo_r": {
			"type": "systemVariable",
			"summary": "カレントカラーのR成分",
			"group": ["standard"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"カレントカラーのR成分を示すシステム変数です。"
			],
			"relationGroup": [
				"stdSystemVariable"
			]
		},
		"ginfo_g": {
			"type": "systemVariable",
			"summary": "カレントカラーのG成分",
			"group": ["standard"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"カレントカラーのG成分を示すシステム変数です。"
			],
			"relationGroup": [
				"stdSystemVariable"
			]
		},
		"ginfo_b": {
			"type": "systemVariable",
			"summary": "カレントカラーのB成分",
			"group": ["standard"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"カレントカラーのB成分を示すシステム変数です。"
			],
			"relationGroup": [
				"stdSystemVariable"
			]
		},
		"ginfo_a": {
			"type": "systemVariable",
			"summary": "カレントカラーのA成分",
			"group": ["standard"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"カレントカラーのA成分を示すシステム変数です。"
			],
			"relationGroup": [
				"stdSystemVariable"
			]
		},
		"ginfo_cx": {
			"type": "systemVariable",
			"summary": "カレントポジションのX成分",
			"group": ["standard"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"カレントポジションのX成分を示すシステム変数です。"
			],
			"relationGroup": [
				"stdSystemVariable"
			]
		},
		"ginfo_cy": {
			"type": "systemVariable",
			"summary": "カレントポジションのY成分",
			"group": ["standard"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"カレントポジションのY成分を示すシステム変数です。"
			],
			"relationGroup": [
				"stdSystemVariable"
			]
		},
		"ginfo_mesx": {
			"type": "systemVariable",
			"summary": "文字列の出力サイズX",
			"group": ["standard"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"最後に出力した$ref(mes)の描画サイズXを示すシステム変数です。"
			],
			"relationGroup": [
				"stdSystemVariable"
			]
		},
		"ginfo_mesy": {
			"type": "systemVariable",
			"summary": "文字列の出力サイズY",
			"group": ["standard"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"最後に出力した$ref(mes)の描画サイズYを示すシステム変数です。"
			],
			"relationGroup": [
				"stdSystemVariable"
			]
		},
		"hwnd": {
			"type": "systemVariable",
			"summary": "現在の操作先ウィンドウのウィンドウハンドル",
			"group": ["standard"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"現在の操作先ウィンドウのウィンドウハンドルを示すシステム変数です。",
				"ウィンドウハンドルはプラットフォーム固有の値のため、扱いには注意してください。",
				"ウィンドウハンドルが存在しない場合、0が得られます。"
			],
			"relationGroup": [
				"stdSystemVariable"
			]
		},
		"hdc": {
			"type": "systemVariable",
			"summary": "現在の操作先ウィンドウのデバイスコンテキスト",
			"group": ["standard"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"現在の操作先ウィンドウのデバイスコンテキストを示すシステム変数です。",
				"デバイスコンテキストはプラットフォーム固有の値のため、扱いには注意してください。",
				"デバイスコンテキストが存在しない場合、0が得られます。"
			],
			"relationGroup": [
				"stdSystemVariable"
			]
		},
		"hinstance": {
			"type": "systemVariable",
			"summary": "現在の操作先ウィンドウのインスタンスハンドル",
			"group": ["standard"],
			"tag": [],
			"parameters": [
			],
			"description": [
				"現在の操作先ウィンドウのインスタンスハンドルを示すシステム変数です。",
				"インスタンスハンドルはプラットフォーム固有の値のため、扱いには注意してください。",
				"インスタンスハンドルが存在しない場合、0が得られます。"
			],
			"relationGroup": [
				"stdSystemVariable"
			]
		}
	}
}