//=============================================================================
// literal
mes "literal"
	if (10 != 10) { raise }
	if (10 == -10) { raise }
	if (0x10 != 16) { raise }
	if (0xABC != 2748) { raise }
	if (' ' != 32) { raise }
	if ('ソ' != 0x30bd) { raise }
	if ('\x20' != 0x20) { raise }
	if ("\x20" != " ") { raise }
	if ("\u0020" != " ") { raise }
	if ("\u30bd" != "ソ") { raise }
	if ("\U000030bd" != "ソ") { raise }

//=============================================================================
// operator
mes "operator"
	if ((1 then 2 else 3) != 2) { raise }
	if ((0 then 2 else 3) != 3) { raise }
	if ((1 then 2 else 3 then 4 else 5) != 2) { raise }
	if ((0 then 2 else 3 then 4 else 5) != 4) { raise }
	if ((0 then 2 else 0 then 4 else 5) != 5) { raise }
	if (((1 then 2 else 3) then 4 else 5) != 4) { raise }
	if (!10 != 0) { raise }
	if (!0 != 1) { raise }
	if (!"-12" != 0) { raise }
	if ((10 || 22) != 10) { raise }
	if ((10 && 22) != 22) { raise }
	if ((10 | 22) != 30) { raise }
	if ((10 & 22) != 2) { raise }
	if ((10 ^ 22) != 28) { raise }
	if (10 << 2 != 40) { raise }
	if (10 >> 2 != 2) { raise }
	if (10 + 22 != 32) { raise }
	if (10 - 22 != -12) { raise }
	if (10 * 22 != 220) { raise }
	if (10 / 22 != 0) { raise }
	if (10 \ 22 != 10) { raise } : if (22 \ 10 != 2) { raise }

//=============================================================================
// controlflow
mes "controlflow"
	i = 0 : if (10 == 10) { i = 1 } else { raise } : if (i != 1) { raise }
	i = 0 : if (10 == 1) { raise } else { i = 1 } : if (i != 1) { raise }
	i = 0 : if (10 != 10) { raise } else { i = 1 } : if (i != 1) { raise }
	i = 0 : if (10 != 10) { raise } : if (i != 0) { raise }
	i = 0
		if (10 != 10) : raise : else : i = 1
		if (i != 1) { raise }
	i = 0
		if (10 == 10) : i = 1 : else : raise
		if (i != 1) { raise }
	i = 0
		if (10 == 10) { i = 1 } else : raise
		if (i != 1) { raise }
	i = 0
		if (10 == 10) : i = 1 : else { raise }
		if (i != 1) { raise }
	i = 0 
		if (10 == 10) : i = 1
		else : raise
		if (i != 1) { raise }
	i = 0 
		if (10 != 10) : i = 1 : raise
		else : i = 2
		if (i != 2) { raise }
	i = 0 
		if (10 == 10) { i = 1 }
		else : raise
		if (i != 1) { raise }
	i = 0 
		if (10 != 10) { i = 1 : raise }
		else { i = 2 }
		if (i != 2) { raise }

	sum = 0 : gcnt = 0
	repeat 10
		if (cnt != gcnt) { raise }
		++gcnt
		if (cnt == 5) { continue }
		if (cnt == 8) { break }
		if (cnt == 5 || cnt >= 8) { raise }
		sum += cnt
	loop
	if (sum != 23) { raise }

	gcnt = 0
	repeat 10
		if (cnt != gcnt) { raise }
		scnt = 0
		repeat 10
			if (cnt != scnt) { raise }
			scnt++
		loop
		if (cnt != gcnt) { raise }
		++gcnt
	loop

	i = 0 : switch (1) : case 0 : i = 1 : swbreak : case 1 : i = 2 : swbreak : case 2 : i = 3 : swbreak : swend : if (i != 2) { raise }
	i = 0 : switch (1) : case 0 : i = 1 : swbreak : case 1 : i = 2 : swbreak : case 2 : i = 3 : swbreak : default : i = 4 : swend : if (i != 2) { raise }
	i = 0 : switch (2) : case 0 : i = 1 : swbreak : case 1 : i = 2 : swbreak : case 2 : i = 3 : swbreak : default : i = 4 : swend : if (i != 3) { raise }
	i = 0 : switch (3) : case 0 : i = 1 : swbreak : case 1 : i = 2 : swbreak : case 2 : i = 3 : swbreak : default : i = 4 : swend : if (i != 4) { raise }
	i = 0 : switch (10) : case 0 : i = 1 : swbreak : case 1 : i = 2 : swbreak : case 2 : i = 3 : swbreak : default : i = 4 : swend : if (i != 4) { raise }
	i = 0 : switch ("str") : case 0 : i = 1 : swbreak : case 1 : i = 2 : swbreak : case 2 : i = 3 : swbreak : default : i = 4 : swend : if (i != 4) { raise }
	i = 0 : switch ("") : default : i = 4 : swend : if (i != 4) { raise }
	i = 0 : switch 0 : default : i = 4 : swend : if (i != 4) { raise }
	//i = 0 : switch 0 : default : i = 4 : default : swend : if (i != 4) { raise }// ERROR : duplicated "default"
	i = 0 : switch 1 : case 0 : case 1 : i = 4 : swbreak : case 2 : case 3 : i = 5 : swend : if (i != 4) { raise }
	i = 0 : switch 2 : case 0 : case 1 : i = 4 : swbreak : case 2 : case 3 : i = 5 : swend : if (i != 5) { raise }

	i = 0
		switch 1
		case 0 : i = 1 : swbreak
		case 1 : i = 2
		case 2 : i = 3 : swbreak
		swend
		if (i != 3) { raise }

