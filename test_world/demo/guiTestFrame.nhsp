//=============================================================================
// guiTestFrame.nhsp

#module "guiTestFrame"

#deffunc global guiTestFrameInit
	// グローバル初期化
	if (!gIsInitialized) {
		gIsInitialized = 1
		gIsFontItalic = 0 : gIsFontShadow = 0 : gIsFontOutline = 0 : gIsFontHeight = 32.0
	}
	// ローカル初期化
	toReturn = 0
	buttonPushed = 0
	checked = 0
	masterFrame = 0
	// GUI初期化
	gsel 0 : cls
	objsize 200, 20 : pos 20, 60 : button gosub "ボタンをおしてください", *implPushButton
	objsize 200, 20 : pos 20, 90 : chkbox "チェックボックスのテスト", checked
	objsize 200, 20 : pos 20, 120 : input textInput
	objsize 100, 20 : pos 20, 150 : chkbox "斜体", gIsFontItalic : pos 130, 150 : chkbox "シャドウ", gIsFontShadow : pos 250, 150 : chkbox "アウトライン", gIsFontOutline
	objsize 60, 20 : pos 600, 400 : button gosub "終わる", *implReturnTo
	return

#deffunc global guiTestFramePush
	guiTestFrameInit; ともあれ初期化
	framePush "guiTestFrame", *guiTestFrameCompute, *guiTestFrameDraw, 0
	return

*implPushButton
	buttonPushed++
	return

*implReturnTo
	toReturn = 1
	return

*guiTestFrameCompute
	// トップ時のみ計算
	if (!frameIsTop()) { return }
	// 入力
	if (toReturn) {
		gsel 0 : cls
		framePop
	}
	// フレーム終了
	++masterFrame
	return

*guiTestFrameDraw
	// トップ時のみ描画
	if (!frameIsTop()) { return }
	// 描画内容
	gsel 0
		tMouseX = mousex : tMouseY = mousey
	gsel SID_BACK
		color 128, 128, 128 : boxf
		font "", 20
		color 255, 255, 255
		pos 20, 20
			mes `platform=${sysreq@n2(sysreq_platform@n2)} CPUCore=${sysreq@n2(sysreq_cpu_core_count@n2)} CacheLine=${sysreq@n2(sysreq_cpu_cache_line_size@n2)} RAM=${sysreq@n2(sysreq_system_ram_mb@n2)}[MB] Battery=${sysreq@n2(sysreq_battery_percentage@n2)}[%]`
			mes `mouse(X=${tMouseX}, Y=${tMouseY})`
		pos 240, 60 : mes buttonPushed > 0 then `ボタンが ${buttonPushed} 回押されました` else ""
		pos 240, 90 : mes `チェック状態 ${checked}`
		pos 240, 120 : mes `テキスト入力 ${textInput}`

		font "Stick", gIsFontHeight, (gIsFontItalic then 2 else 0)
		color 255, 0, 255 : objcolor 255, 255, 0
		tsx = 380 : tsy = 150
		pos tsx, tsy : mes `nidonehspのテキスト表示テスト\n入力＝${textInput}`, (gIsFontShadow then mesopt_shadow else 0) | (gIsFontOutline then mesopt_outline else 0)
		color 0, 255, 255
		pos tsx, tsy : line tsx + ginfo_mesx, tsy : line tsx + ginfo_mesx, tsy + ginfo_mesy : line tsx, tsy + ginfo_mesy : line tsx, tsy
	return

#global

